---
name: 'PR Semantic Version Labels'
on:
  workflow_run:
    workflows:
      [
        '🪄 Refresh Repository Badges',
        '🏠 Home Assistant CI',
        '🧹✨ Linting & Style Checks',
      ]
    types:
      - completed
    branches:
      - main

jobs:
  add-semver-label:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Determine next version
        id: determine_version
        run: |
          # Determine the next version based on the PR label
          echo "next_version=$(git describe --tags --abbrev=0 | awk -F. -v OFS=. '{$NF++; print}')" >> $GITHUB_ENV
          echo "Determined next version: ${{ env.next_version }}"

      - name: Create tag
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git tag ${{ env.next_version }}
          git push https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git ${{ env.next_version }}

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: main
          destination_branch: gh-deploy
          pr_title: 'Deploy to GitHub Pages - ${{ env.next_version }}'
          pr_body: 'This pull request is automatically generated to deploy the latest changes to GitHub Pages.'
          pr_label: 'needs approval'

      - name: Label PR based on semantic version
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prBody = context.payload.pull_request.body.toLowerCase();
            const prNumber = context.payload.pull_request.number;
            let label = null;

            if (prBody.includes('type of change: patch')) {
              label = 'patch';
            } else if (prBody.includes('type of change: minor')) {
              label = 'minor';
            } else if (prBody.includes('type of change: major')) {
              label = 'major';
            }

            if (label) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: [label],
              });
            }
