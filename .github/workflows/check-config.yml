---
name: Home Assistant CI

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  schedule:
    - cron: 0 12 * * *

jobs:
  yamllint:
    name: 🧹 yamllint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out configuration from GitHub
        uses: actions/checkout@v5
      # Disabled temporary
      # - name: 🚀 Run yamllint
      #   uses: frenck/action-yamllint@v1.5.0

  remarklint:
    name: 📝 Lint Markdown Files
    runs-on: ubuntu-18.04
    steps:
      - name: ⤵️ Check out repository
        uses: actions/checkout@v5
        with:
          ref: main
      - name: 🧐 Run Remark Lint
        uses: "docker://pipelinecomponents/remark-lint:latest"
        continue-on-error: true
        with:
          args: |
            remark --no-stdout --color --frail --use preset-lint-recommended .

  home-assistant:
    name: 🧪 Home Assistant Core – Config Check (${{ matrix.version }})
    needs: [yamllint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["stable", "beta", "dev"]
    steps:
      - name: ⤵️ Check out repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: 📥 Clone custom component - OpenID Connect for Home Assistant
        run: |
          git clone https://github.com/christiaangoossens/hass-oidc-auth.git
          mv -v hass-oidc-auth/custom_components/* custom_components

      - name: 🚀 Validate Home Assistant Configuration
        uses: frenck/action-home-assistant@v1.4.1
        with:
          path: "."
          secrets: ./secrets.fake.yaml
          version: "${{ matrix.version }}"

  esphome:
    name: 🔌 ESPHome Configuration Check
    runs-on: ubuntu-latest
    needs: [yamllint]
    steps:
      - name: ⤵️ Check out repository
        uses: actions/checkout@v5
        with:
          ref: main
      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: 📦 Install ESPHome dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install esphome
          pip list
          esphome version
      - name: 🗝️ Copy secrets stub into ESPHome folder
        run: cp ./secrets.fake.yaml ./esphome/secrets.yaml
      - name: 🔍 Validate ESPHome configuration files
        # yamllint disable rule:line-length
        run: |
          for file in $(find ./config/esphome -type f -name "*.yaml" -maxdepth 1 -not -name "secrets.yaml"); do
            esphome "${file}" config
          done