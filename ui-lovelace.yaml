views:
  - title: 둘러보기
    icon: mdi:home
    path: home
    type: sections
    cards: []
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.count_media_player_playing
                    below: 1
                card:
                  type: vertical-stack
                  cards:
                    - type: markdown
                      content: "{% set start_time_raw = state_attr('calendar.personal',\
                        \ 'start_time') %}\n{% set today = now().date() %}\n{% set\
                        \ tomorrow = (now() + timedelta(days=1)).date() %}\n\n{% if\
                        \ is_state('calendar.personal', 'off') %}\n  {% if start_time_raw\
                        \ %}\n    {% set start_time = start_time_raw | as_datetime\
                        \ | as_local %}\n    #### 가까운 개인 일정은 {% if start_time.date()\
                        \ == today %}오늘 {% if state_attr('calendar.personal', 'all_day')\
                        \ %}종일 {% else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% elif start_time.date() == tomorrow %}내일\
                        \ {% if state_attr('calendar.personal', 'all_day') %}종일 {%\
                        \ else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% else %}{{ start_time.strftime('%-m월 %-d일')\
                        \ }} {% if state_attr('calendar.personal', 'all_day') %}종일\
                        \ {% else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% endif %}예정된 '{{ state_attr('calendar.personal',\
                        \ 'message') }}'입니다.\n  {% else %}\n    #### 예정된 개인 일정이 없어요.\n\
                        \  {% endif %}\n\n{% elif is_state('calendar.personal', 'on')\
                        \ %}\n  {% if start_time_raw %}\n    {% set start_time = start_time_raw\
                        \ | as_datetime | as_local %}\n    #### {% if start_time.date()\
                        \ == today %}오늘 {% if state_attr('calendar.personal', 'all_day')\
                        \ %}종일 {% else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% elif start_time.date() == tomorrow %}내일\
                        \ {% if state_attr('calendar.personal', 'all_day') %}종일 {%\
                        \ else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% else %}{{ start_time.strftime('%-m월 %-d일')\
                        \ }} {% if state_attr('calendar.personal', 'all_day') %}종일\
                        \ {% else %}{{ start_time.strftime('%-H시') }}{%if start_time.strftime('%-M')\
                        \ | int == 0 %}{% elif start_time.strftime('%-M') | int ==\
                        \ 30 %} 반{% else %} {{ start_time.strftime('%-M분') }}{% endif\
                        \ %}에 {% endif %}{% endif %}'{{ state_attr('calendar.personal',\
                        \ 'message') }}' 예정이에요.\n  {% else %}\n    #### 예정된 개인 일정이\
                        \ 없어요.\n  {% endif %}\n{% else %}\n  #### 현재 일정 정보를 확인할 수\
                        \ 없습니다.  \n{% endif %}\n\n\n ####{% set anniversary_sensors\
                        \ = states.sensor\n  | selectattr('entity_id', 'search', '^sensor\\\
                        .anniversary_')\n  | map(attribute='state') | map('int') |\
                        \ sort | list %} {% for days in anniversary_sensors[:2] -%}\
                        \ {% set sensor = states.sensor | selectattr('state', 'equalto',\
                        \ days|string) | selectattr('entity_id', 'search', '^sensor\\\
                        .anniversary_') | list | first %}  {{ sensor.attributes.friendly_name\
                        \ }}까지 {{ days }}일이{%- if not loop.last %}, {% endif -%}\n\
                        {% endfor %} 남았어요."
                      text_only: true
                      visibility:
                        - condition: user
                          users:
                            - 28576fd2187c4042a30a79e29d3c257e
                            - b2f46c24e35948b48787cbe1fa4ad970
                    - type: horizontal-stack
                      cards:
                        - type: custom:mushroom-chips-card
                          chips:
                            - type: template
                              tap_action:
                                action: navigate
                                navigation_path: '#saya6k'
                              entity: person.saya6k
                              picture: '{{ state_attr(entity, ''entity_picture'')
                                }}'
                              content: "{% if is_state('sensor.saya6k_place', 'unavailable')\
                                \ or is_state('sensor.saya6k_place', 'unknown') %}\n\
                                \  {{ state_translated(entity) }}\n{% elif is_state('sensor.saya6k_place',\
                                \ 'Home') %}\n  집\n{% else %}\n  {{ state_translated('sensor.saya6k_place')\
                                \ }}\n{% endif %}"
                            - type: conditional
                              conditions:
                                - condition: state
                                  entity: person.abba
                                  state: home
                              chip:
                                type: entity
                                entity: person.eomma
                                use_entity_picture: true
                            - type: conditional
                              conditions:
                                - condition: state
                                  entity: person.eomma
                                  state: home
                              chip:
                                type: entity
                                entity: person.abba
                                use_entity_picture: true
                            - type: conditional
                              conditions:
                                - condition: state
                                  entity: person.eunbi
                                  state: home
                              chip:
                                type: template
                                entity: person.eunbi
                                picture: '{{ state_attr(entity, ''entity_picture'')
                                  }}'
                                content: "{% if is_state(entity, 'unavailable') or\
                                  \ is_state(entity, 'unknown') %}\n  {{ state_translated(entity)\
                                  \ }}\n{% elif is_state(entity, 'home') %}\n  집\n\
                                  {% else %}\n  {{ state_translated(entity) }}\n{%\
                                  \ endif %} "
                                tap_action:
                                  action: more-info
                            - type: conditional
                              conditions:
                                - condition: numeric_state
                                  entity: sensor.count_guest_wifi_connection
                                  above: 0
                              chip:
                                type: entity
                                entity: sensor.count_guest_wifi_connection
                                icon: mdi:account-plus
                          alignment: start
                        - type: custom:auto-entities
                          card:
                            type: custom:mushroom-chips-card
                            alignment: end
                          card_param: chips
                          sort:
                            method: entity_id
                          filter:
                            template: "{% for ENTITY in states.person\n  | map(attribute='entity_id')\n\
                              \  | list\n  | reject('is_state_attr', 'friendly_name',\
                              \ 'Administrator')\n  | reject('is_state_attr', 'friendly_name',\
                              \ '원규')\n  | reject('is_state_attr', 'friendly_name',\
                              \ '서현')          | reject('is_state', 'home')\n  | reject('is_hidden_entity')\
                              \ -%}\n{{\n  {\n    'type': 'template',\n    'entity':\
                              \ ENTITY,\n    'picture': state_attr(ENTITY, 'entity_picture')\
                              \ ,\n    'content': '{{ states(\"sensor.'+ ENTITY |\
                              \ replace('person.', '') + '_place\") }}',\n    \"double_tap_action\"\
                              : {\n      \"action\": \"navigate\",\n      \"navigation_path\"\
                              : \"#\"+ENTITY | replace('person.', '')\n    },\n  \
                              \  \"hold_action\": {\n      \"action\": \"navigate\"\
                              ,\n      \"navigation_path\": \"#\"+ENTITY | replace('person.',\
                              \ '')\n    },\n    \"tap_action\": {\n      \"action\"\
                              : \"more-info\"\n    }\n  }\n}}, {% endfor %}\n"
                            exclude: []
                    - type: picture-elements
                      elements:
                        - type: state-icon
                          entity: light.living_room_ceiling_light
                          tap_action:
                            action: toggle
                          style:
                            left: 34%
                            top: 55%
                        - type: state-icon
                          style:
                            left: 15%
                            top: 75%
                          entity: light.bedroom_table_lamp
                          tap_action:
                            action: toggle
                        - type: state-icon
                          entity: light.entrance_light
                          tap_action:
                            action: toggle
                          style:
                            left: 80%
                            top: 43%
                        - type: state-icon
                          entity: light.bathroom_ceiling_light
                          tap_action:
                            action: toggle
                          style:
                            left: 67%
                            top: 60%
                        - type: icon
                          icon: mdi:sofa
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/living_room
                          hold_action:
                            action: none
                          style:
                            left: 92%
                            top: 10%
                        - type: icon
                          icon: mdi:bed-king
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/bedroom
                          hold_action:
                            action: none
                          style:
                            left: 92%
                            top: 26%
                        - type: icon
                          icon: mdi:stove
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/kitchen
                          hold_action:
                            action: none
                          style:
                            left: 92%
                            top: 42%
                        - type: icon
                          icon: mdi:toilet
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/bathroom
                          hold_action:
                            action: none
                          style:
                            left: 92%
                            top: 58%
                        - type: icon
                          icon: mdi:door-closed-lock
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/front_door
                          hold_action:
                            action: none
                          style:
                            left: 92%
                            top: 74%
                        - type: icon
                          style:
                            left: 92%
                            top: 90%
                          icon: mdi:city-variant-outline
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/neighborhood
                          hold_action:
                            action: none
                      image: /local/floorplan.png
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.count_media_player_playing
                    above: 0
                card:
                  type: vertical-stack
                  cards:
                    - type: custom:auto-entities
                      card:
                        type: custom:bubble-card
                        card_type: separator
                        name: Now Playing
                        icon: mdi:television-speaker
                        card_layout: large
                      card_param: sub_button
                      sort:
                        method: entity_id
                      filter:
                        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\
                          \      \n  | list\n  | select('in', integration_entities('music_assistant'))\n\
                          \  | select('is_state', 'playing')\n  | reject('is_hidden_entity')\
                          \ -%}\n{{\n  {\n    'entity': ENTITY,\n    'show_name':\
                          \ 'true',\n    'show_background': 'true',\n    'icon': 'mdi:heart-plus',\n\
                          \    'tap_action': {\n      'action': 'perform-action',\n\
                          \      'perform_action': 'button.press',\n      'target':\
                          \ {\n        'entity_id': ENTITY | replace('media_player',\
                          \ 'button') + '_favorite_current_song'\n      },\n     \
                          \ 'confirmation': 'true'\n    }\n  }\n}}, {% endfor %} \
                          \       \n"
                        exclude: []
                    - type: custom:yet-another-media-player
                      entities:
                        - media_player.living_room
                        - media_player.bathroom
                      volume_mode: slider
                      match_theme: true
                      always_collapsed: true
                    - type: custom:auto-entities
                      card:
                        type: custom:bubble-card
                        card_type: separator
                        name: ''
                        icon: ''
                        card_layout: large
                      card_param: sub_button
                      sort:
                        method: entity_id
                      filter:
                        template: "{%- for AREA in areas() -%} {{\n  {\n    'show_name':\
                          \ 'true',\n    'show_background': 'true',\n    'name': area_name(AREA),\n\
                          \    'tap_action': {\n      'action': 'navigate',\n    \
                          \  'navigation_path': '/lovelace/' ~ AREA\n    }\n  }\n\
                          }},{% endfor %}\n"
                        exclude: []
          - type: custom:bubble-card
            card_type: button
            show_state: false
            card_layout: large-2-rows
            icon: mdi:water-thermometer-outline
            sub_button:
              - entity: sensor.indoor_average_temperature
                show_state: true
                state_background: false
                show_background: false
              - entity: sensor.indoor_average_humidity
                show_state: true
                state_background: false
                show_background: false
              - entity: sensor.living_room_netatmo_carbon_dioxide
                show_background: false
                show_state: true
                icon: mdi:molecule-co2
              - entity: sensor.living_room_netatmo_noise
                show_background: false
                show_icon: true
                show_state: true
                icon: mdi:ear-hearing
            button_type: state
            name: Climate
            styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(1,255,255,0.3)\
              \ !important;\n  }"
            tap_action:
              action: navigate
              navigation_path: /lovelace/climate
            button_action:
              tap_action:
                action: navigate
                navigation_path: /lovelace/climate
            entity: sensor.indoor_average_temperature
          - type: custom:bubble-card
            card_type: button
            show_state: false
            card_layout: large-2-rows
            icon: mdi:lightning-bolt
            sub_button:
              - entity: sensor.utility_this_month_electricity
                show_state: true
                state_background: false
                show_background: false
                tap_action:
                  action: more-info
              - entity: sensor.electricity_bill_forecast
                show_state: true
                state_background: false
                show_background: false
                tap_action:
                  action: more-info
              - entity: sensor.utility_this_month_gas
                show_background: false
                icon: mdi:fire
                show_state: true
              - entity: sensor.utility_this_month_water
                icon: mdi:water
                show_state: true
                show_background: false
            button_type: state
            name: Energy
            styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(255,255,1,0.3)\
              \ !important;\n  }"
            button_action:
              tap_action:
                action: navigate
                navigation_path: /lovelace/energy
            tap_action:
              action: navigate
              navigation_path: /lovelace/energy
            entity: sensor.electricity_bill_used
          - type: custom:bubble-card
            card_type: button
            show_state: true
            card_layout: large
            icon: mdi:home-assistant
            sub_button:
              - entity: binary_sensor.system_check_unifi
                show_state: false
                state_background: true
                show_background: true
                icon: mdi:web
                tap_action:
                  action: navigate
                  navigation_path: '#system_check_unifi'
              - icon: si:truenas
                show_state: false
                tap_action:
                  action: navigate
                  navigation_path: '#system_check_truenas'
                entity: binary_sensor.system_check_truenas
              - entity: sensor.jellyfin_active_clients
                icon: mdi:jellyfish
                show_state: false
                tap_action:
                  action: navigate
                  navigation_path: '#system_check_jellyfin'
              - entity: sensor.plex_truenas_scale
                icon: mdi:plex
                show_state: false
                tap_action:
                  action: navigate
                  navigation_path: '#system_check_jellyfin'
            button_type: state
            name: System
            styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(255,1,255,0.3)\
              \ !important;\n  }"
            tap_action:
              action: navigate
              navigation_path: /lovelace/system
            button_action:
              tap_action:
                action: navigate
                navigation_path: /lovelace/system
            entity: sensor.system_monitor_processor_temperature
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#people'
                name: 사람
                icon: mdi:home-account
                button_type: state
                show_last_changed: false
                show_state: false
              - type: entities
                entities:
                  - entity: sensor.saya6k_place
                    name: 원규
                    tap_action:
                      action: navigate
                      navigation_path: '#saya6k'
                  - entity: sensor.abba_place
                    name: 아빠
                    tap_action:
                      action: more-info
                  - entity: sensor.eomma_place
                    name: 엄마
                    tap_action:
                      action: more-info
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#saya6k'
                name: ''
                icon: ''
                button_type: state
                entity: person.saya6k
                show_last_changed: false
                show_state: false
                sub_button:
                  - entity: device_tracker.ys_iphone_13
                    state_background: false
                    show_background: true
                    tap_action:
                      action: perform-action
                      perform_action: icloud.play_sound
                      target: {}
                      confirmation: true
                      data:
                        account: saya6k@me.com
                        device_name: YS-iPhone
                    icon: mdi:cellphone
                  - state_background: false
                    tap_action:
                      action: perform-action
                      perform_action: icloud.play_sound
                      target: {}
                      confirmation: true
                      data:
                        account: saya6k@me.com
                        device_name: YS-MacBook
                    entity: device_tracker.ys_macbook
                    icon: mdi:laptop
                  - state_background: false
                    tap_action:
                      action: perform-action
                      perform_action: icloud.play_sound
                      target: {}
                      confirmation: true
                      data:
                        account: saya6k@me.com
                        device_name: YS-AppleWatch
                    entity: device_tracker.ys_applewatch
                    icon: mdi:watch-variant
              - type: custom:tabbed-card
                options: {}
                tabs:
                  - card:
                      type: vertical-stack
                      cards:
                        - type: custom:week-planner-card
                          calendars:
                            - entity: calendar.south_korea
                            - entity: calendar.personal
                            - entity: calendar.study
                            - entity: calendar.t1
                            - entity: calendar.anniversaries
                            - entity: calendar.withings_workouts
                          days: '1'
                          startingDay: today
                          startingDayOffset: 0
                          hideWeekend: false
                          noCardBackground: false
                          compact: false
                          weather:
                            showCondition: true
                            showTemperature: true
                            showLowTemperature: true
                            useTwiceDaily: false
                            entity: weather.wn_seoul
                          showLocation: true
                          hidePastEvents: false
                          hideDaysWithoutEvents: false
                          hideTodayWithoutEvents: false
                          combineSimilarEvents: false
                          showLegend: false
                          showDescription: false
                          showNavigation: true
                          locale: ko
                          texts:
                            noEvents: 일정 없음
                            today: 오늘
                            tomorrow: 내일
                            yesterday: 어제
                            fullDay: 종일
                        - type: custom:bubble-card
                          card_type: separator
                          icon: mdi:battery-50
                          name: 배터리 잔량
                        - type: custom:auto-entities
                          filter:
                            include:
                              - entity_id: '*ys*'
                                attributes:
                                  device_class: battery
                                options:
                                  type: custom:entity-progress-card
                                  entity: this.entity_id
                                  theme: battery
                          card:
                            square: false
                            type: grid
                            columns: 2
                          show_empty: true
                          card_param: cards
                          sort:
                            method: state
                            numeric: true
                            ignore_case: false
                        - type: custom:bubble-card
                          card_type: separator
                          name: Find my
                          icon: mdi:apple
                        - type: custom:auto-entities
                          card:
                            type: custom:map-card
                            tile_layer_url: '{{ states(''sensor.naver_map_url'') }}'
                            tile_layer_attribution: naver.com
                          filter:
                            include:
                              - entity_id: person.saya6k
                              - entity_id: device_tracker.*ys*
                            exclude:
                              - state: unavailable
                              - attributes:
                                  passive: true
                              - attributes:
                                  zone: home
                    attributes:
                      label: 기본
                      icon: mdi:star
                  - card:
                      type: vertical-stack
                      cards:
                        - type: horizontal-stack
                          cards:
                            - type: entity
                              entity: sensor.withings_weight
                              name: 몸무게
                              icon: mdi:scale-bathroom
                        - type: history-graph
                          entities:
                            - entity: sensor.withings_weight
                              name: 몸무게
                            - entity: sensor.withings_weight_goal
                              name: 목표
                            - entity: sensor.withings_muscle_mass
                              name: 근육량
                            - entity: sensor.withings_bone_mass
                              name: 골 질량
                            - entity: sensor.withings_fat_mass
                              name: 체지방량
                          hours_to_show: 4320
                        - type: horizontal-stack
                          cards:
                            - type: tile
                              entity: input_datetime.wake_up
                            - type: tile
                              entity: input_datetime.wake_up
                        - type: custom:stack-in-card
                          cards:
                            - square: false
                              type: grid
                              cards:
                                - type: custom:apexcharts-card
                                  chart_type: donut
                                  header:
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                    title: Sleep Breakdown
                                  series:
                                    - entity: sensor.withings_rem_sleep
                                      name: REM
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_deep_sleep
                                      name: Deep Sleep
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_light_sleep
                                      name: Light Sleep
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_wakeup_time
                                      name: Awake
                                      show:
                                        as_duration: second
                                        datalabels: false
                                  apex_config:
                                    legend:
                                      show: false
                                    chart:
                                      type: donut
                                      height: 0
                                      width: 0%
                                    plotOptions:
                                      pie:
                                        donut:
                                          size: 60%
                                          labels:
                                            show: false
                                    dataLabels:
                                      enabled: false
                                - type: custom:apexcharts-card
                                  chart_type: donut
                                  header:
                                    show: false
                                    show_states: false
                                    colorize_states: false
                                    title: ''
                                  series:
                                    - entity: sensor.withings_rem_sleep
                                      name: REM
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_deep_sleep
                                      name: Deep Sleep
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_light_sleep
                                      name: Light Sleep
                                      show:
                                        as_duration: second
                                        datalabels: false
                                    - entity: sensor.withings_wakeup_time
                                      name: Awake
                                      show:
                                        as_duration: second
                                        datalabels: false
                                  apex_config:
                                    legend:
                                      show: false
                              columns: 2
                    attributes:
                      label: 건강
                      icon: mdi:heart-outline
                  - card:
                      type: vertical-stack
                      cards:
                        - type: custom:auto-entities
                          card:
                            type: custom:mushroom-chips-card
                            alignment: center
                          filter:
                            template: "{% for ENTITY in states.sensor\n  | map(attribute='entity_id')\
                              \      \n  | list          \n  | select('match', 'sensor\\\
                              .fireflyiii_.*_asset_account')\n  | reject('is_hidden_entity')\
                              \ -%}\n{{\n  {\n    'type': 'entity',\n    'entity':\
                              \ ENTITY,\n    'name': state_attr(ENTITY, 'friendly_name')\
                              \ | replace('FireflyIII ', '') | replace(' Asset account',\
                              \ ''),\n    'content_info': 'name',\n    'icon': 'mdi:bank'\n\
                              \  }\n}}, {% endfor %}        \n"
                          show_empty: false
                          card_param: chips
                        - type: custom:week-planner-card
                          calendars:
                            - entity: calendar.fireflyiii_bills
                          days: '7'
                          startingDay: today
                          startingDayOffset: 0
                          hideWeekend: false
                          noCardBackground: false
                          compact: true
                          weather:
                            showCondition: false
                            showTemperature: false
                            showLowTemperature: false
                            useTwiceDaily: false
                          locale: ko
                          showLocation: false
                          hidePastEvents: false
                          hideDaysWithoutEvents: true
                          hideTodayWithoutEvents: false
                          combineSimilarEvents: false
                          showLegend: false
                          showDescription: true
                          texts:
                            fullDay: ''
                            noEvents: 낼 요금 없음
                            today: 오늘
                        - type: heading
                          heading: 예산
                          icon: mdi:cash
                        - type: custom:auto-entities
                          filter:
                            include: []
                            template: "{% for ENTITY in states.sensor\n  | map(attribute='entity_id')\
                              \      \n  | list          \n  | select('match', 'sensor\\\
                              .fireflyiii_.*_budget')\n  | reject('is_hidden_entity')\
                              \ -%}\n{{\n  {\n    'type': 'custom:entity-progress-card',\n\
                              \    'entity': ENTITY,\n    'name': state_attr(ENTITY,\
                              \ 'friendly_name') | replace('FireflyIII ', '') | replace('\
                              \ Budget', ''),\n    'icon': 'mdi:cash',\n    'unit':\
                              \ ' 원',\n    'decimal': 0,\n    'max_value_attribute':\
                              \ 'limit',\n    'theme': 'optimal_when_low'\n  }\n}},\
                              \ {% endfor %}        \n"
                          card:
                            square: false
                            type: grid
                            columns: 2
                          show_empty: true
                          card_param: cards
                          sort:
                            method: state
                            numeric: true
                            ignore_case: false
                    attributes:
                      label: 재정
                      icon: mdi:bank
                  - card:
                      type: vertical-stack
                      cards:
                        - type: heading
                          icon: mdi:steam
                          heading: Steam
                          heading_style: title
                        - type: custom:auto-entities
                          card:
                            type: entities
                          filter:
                            include:
                              - options: {}
                                integration: steam_online
                                sort:
                                  method: state
                            exclude: []
                        - type: heading
                          heading: Discord
                          heading_style: title
                          icon: si:discord
                        - type: heading
                          icon: mdi:account-group
                          heading_style: subtitle
                          heading: 접속 중인 친구
                        - type: custom:auto-entities
                          filter:
                            include:
                              - domain: sensor
                                integration: discord_game
                                options:
                                  type: custom:mushroom-template-card
                                  entity: this.entity_id
                                  primary: '{{ state_attr(entity, ''display_name'')
                                    }}'
                                  secondary: "{% if is_state(entity, 'offline') %}\n\
                                    \  {{ state_translated(entity) }}\n{% elif state_attr(entity,\
                                    \ 'game') is not none %}\n  {{ state_attr(entity,\
                                    \ 'game') }}\n{% elif state_attr(entity, 'streaming')\
                                    \ is not none %}\n  {{ state_attr(entity, 'streaming_details')\
                                    \ }}\n{% elif state_attr(entity, 'listening')\
                                    \ is not none %}\n  {{ state_attr(entity, 'listening')\
                                    \ }}\n{% elif state_attr(entity, 'watching') is\
                                    \ not none %}\n  {{ state_attr(entity, 'watching_details')\
                                    \ }}\n{% else %}\n  {{ state_translated(entity)\
                                    \ }}\n{% endif %}\n"
                                  icon: ''
                                  tap_action:
                                    action: more-info
                                  picture: "{% if is_state(entity, 'offline') %}\n\
                                    \  {{ state_attr(entity, 'avatar_url') }}\n{%\
                                    \ elif state_attr(entity, 'game') is not none\
                                    \ %}\n  {{ state_attr(entity, 'game_image_small')\
                                    \ }}\n{% elif state_attr(entity, 'streaming')\
                                    \ is not none %}\n  {{ state_attr(entity, 'streaming_url')\
                                    \ }}\n{% elif state_attr(entity, 'listening')\
                                    \ is not none %}\n  {{ state_attr(entity, 'spotify_album_cover_url')\
                                    \ }}\n{% elif state_attr(entity, 'watching') is\
                                    \ not none %}\n  {{ state_attr(entity, 'watching_url')\
                                    \ }}\n{% else %}\n  {{ state_attr(entity, 'avatar_url')\
                                    \ }}\n{% endif %}                      \n"
                            exclude:
                              - state: offline
                          card:
                            type: grid
                            square: false
                            columns: 2
                          card_param: cards
                        - type: custom:expander-card
                          title-card:
                            type: heading
                            icon: mdi:account-group
                            heading_style: subtitle
                            heading: 접속을 안하고 있는 친구
                          cards:
                            - type: custom:auto-entities
                              card:
                                type: grid
                                square: false
                                columns: 2
                              card_param: cards
                              sort:
                                method: entity_id
                              filter:
                                include:
                                  - entity_id: sensor.discord_user_*
                                    state: offline
                                    options:
                                      type: custom:mushroom-template-card
                                      entity: this.entity_id
                                      primary: '{{ state_attr(entity, ''display_name'')
                                        }}'
                                      secondary: "{% if is_state(entity, 'offline')\
                                        \ %}\n  {{ state_translated(entity) }}\n{%\
                                        \ elif state_attr(entity, 'game') is not none\
                                        \ %}\n  {{ state_attr(entity, 'game') }}\n\
                                        {% elif state_attr(entity, 'streaming') is\
                                        \ not none %}\n  {{ state_attr(entity, 'streaming_details')\
                                        \ }}\n{% elif state_attr(entity, 'listening')\
                                        \ is not none %}\n  {{ state_attr(entity,\
                                        \ 'listening') }}\n{% elif state_attr(entity,\
                                        \ 'watching') is not none %}\n  {{ state_attr(entity,\
                                        \ 'watching_details') }}\n{% else %}\n  {{\
                                        \ state_translated(entity) }}\n{% endif %}\n"
                                      icon: ''
                                      tap_action:
                                        action: more-info
                                      picture: "{% if is_state(entity, 'offline')\
                                        \ %}\n  {{ state_attr(entity, 'avatar_url')\
                                        \ }}\n{% elif state_attr(entity, 'game') is\
                                        \ not none %}\n  {{ state_attr(entity, 'game_image_small')\
                                        \ }}\n{% elif state_attr(entity, 'streaming')\
                                        \ is not none %}\n  {{ state_attr(entity,\
                                        \ 'streaming_url') }}\n{% elif state_attr(entity,\
                                        \ 'listening') is not none %}\n  {{ state_attr(entity,\
                                        \ 'spotify_album_cover_url') }}\n{% elif state_attr(entity,\
                                        \ 'watching') is not none %}\n  {{ state_attr(entity,\
                                        \ 'watching_url') }}\n{% else %}\n  {{ state_attr(entity,\
                                        \ 'avatar_url') }}\n{% endif %}          \
                                        \            \n"
                                exclude:
                                  - hidden_by: '*'
                    attributes:
                      label: 친구
                      icon: mdi:human-greeting
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#system_check_unifi'
                button_type: name
                name: Unifi Network
                icon: mdi:web
              - type: custom:tabbed-card
                tabs:
                  - card:
                      type: entities
                      show_header_toggle: false
                      entities:
                        - type: attribute
                          entity: device_tracker.gateway_lite
                          attribute: ip
                          name: IP Address
                        - type: section
                        - entity: update.gateway_lite
                          icon: si:ubiquiti
                          name: Firmware
                        - type: attribute
                          entity: update.gateway_lite
                          attribute: installed_version
                          icon: si:ubiquiti
                          name: Installed
                        - entity: sensor.gateway_lite_state
                          name: WAN Status
                          icon: mdi:wan
                        - type: custom:mini-graph-card
                          name: Speedtest
                          tap_action:
                            action: call-service
                            service: homeassistant.update_entity
                            service_data:
                              entity_id: sensor.unifi_site_seocho_download_speed
                          entities:
                            - entity: sensor.unifi_site_seocho_download_speed
                              name: Download
                              color: '#00bb33'
                            - entity: sensor.unifi_site_seocho_upload_speed
                              name: Upload
                              show_state: false
                              color: '#2196f3'
                              y_axis: secondary
                          hours_to_show: 48
                          hour24: true
                          line_width: 3
                          animate: true
                          upper_bound_secondary: 100
                          show:
                            name: true
                            icon: false
                            state: true
                            legend: true
                            fill: fade
                            labels: true
                            labels_secondary: false
                            average: true
                            extrema: true
                            points: hover
                        - type: divider
                        - entity: sensor.us_8_60w_state
                          name: US-8-60W
                        - entity: sensor.uap_ac_lite_state
                          name: UAP-AC-lite
                    attributes:
                      label: 서초
                  - card:
                      type: entities
                      show_header_toggle: false
                      entities:
                        - type: attribute
                          entity: device_tracker.gateway_pro
                          attribute: ip
                          name: IP Address
                        - type: divider
                        - entity: update.gateway_pro
                          icon: si:ubiquiti
                          name: Firmware
                        - type: attribute
                          entity: update.gateway_pro
                          attribute: installed_version
                          icon: si:ubiquiti
                          name: Installed
                        - entity: sensor.gateway_pro_state
                          name: WAN Status
                          icon: mdi:wan
                        - type: custom:mini-graph-card
                          name: Speedtest
                          tap_action:
                            action: call-service
                            service: homeassistant.update_entity
                            service_data:
                              entity_id: sensor.speedtest_download
                          entities:
                            - entity: sensor.unifi_site_gocheok_download_speed
                              name: Download
                              color: '#00bb33'
                            - entity: sensor.unifi_site_gocheok_upload_speed
                              name: Upload
                              show_state: false
                              color: '#2196f3'
                              y_axis: secondary
                          hours_to_show: 48
                          hour24: true
                          line_width: 3
                          animate: true
                          upper_bound_secondary: 100
                          show:
                            name: true
                            icon: false
                            state: true
                            legend: true
                            fill: fade
                            labels: true
                            labels_secondary: false
                            average: true
                            extrema: true
                            points: hover
                    attributes:
                      label: 고척
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#system_check_truenas'
                button_type: name
                name: TrueNAS
                icon: si:truenas
              - type: entities
                show_header_toggle: false
                title: ''
                entities:
                  - type: attribute
                    entity: update.truenas_system
                    attribute: installed_version
                    icon: si:truenas
                    name: Version
                  - type: divider
                  - entity: sensor.truenas_system_cpu_usage
                    name: Cpu
                    card_mod:
                      style: "hui-generic-entity-row {\n  background:\n    {% set\
                        \ perc = states(config.entity) | float(0) %}\n    {% set rest\
                        \ = 100 - perc %}\n\n    {% if perc >= 59 %}\n      {% set\
                        \ bar = '255,0,0' %}\n    {% elif perc >= 44 %}\n      {%\
                        \ set bar = '128,0,0' %}\n    {% elif perc >= 24 %}\n    \
                        \  {% set bar = '255,165,0' %}\n    {% elif perc >= 9 %}\n\
                        \      {% set bar = '0,100,0' %}\n    {% else %}\n      {%\
                        \ set bar = '0,128,0' %}\n    {% endif %}\n\n    linear-gradient(\n\
                        \      to right,\n      rgba({{ bar }}, 0.9) 0%,\n      rgba({{\
                        \ bar }}, 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{\
                        \ perc }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                  - entity: sensor.truenas_system_memory_usage
                    name: Memory
                    card_mod:
                      style: "hui-generic-entity-row {\n  background:\n    {% set\
                        \ perc = states(config.entity) | float(0) %}\n    {% set rest\
                        \ = 100 - perc %}\n\n    {% if perc >= 59 %}\n      {% set\
                        \ bar = '255,0,0' %}\n    {% elif perc >= 44 %}\n      {%\
                        \ set bar = '128,0,0' %}\n    {% elif perc >= 24 %}\n    \
                        \  {% set bar = '255,165,0' %}\n    {% elif perc >= 9 %}\n\
                        \      {% set bar = '0,100,0' %}\n    {% else %}\n      {%\
                        \ set bar = '0,128,0' %}\n    {% endif %}\n\n    linear-gradient(\n\
                        \      to right,\n      rgba({{ bar }}, 0.9) 0%,\n      rgba({{\
                        \ bar }}, 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{\
                        \ perc }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                  - type: divider
                  - entity: binary_sensor.truenas_system_apps_healthy
                    name: Apps - 806.25GiB
                    card_mod:
                      style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
                        \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
                        \ 'Available GiB') | float(0) %}\n  {% set used = total -\
                        \ available %}\n\n  {% if total > 0 %}\n    {% set percent_used\
                        \ = (used / total * 100) | round(1) %}\n  {% else %}\n   \
                        \ {% set percent_used = 0 %}\n  {% endif %}\n\n  {% if percent_used\
                        \ >= 85 %}\n    {% set bar = '255,0,0' %}\n  {% elif percent_used\
                        \ >= 75 %}\n    {% set bar = '128,0,0' %}\n  {% elif percent_used\
                        \ >= 65 %}\n    {% set bar = '255,99,71' %}\n  {% elif percent_used\
                        \ >= 55 %}\n    {% set bar = '255,69,0' %}\n  {% elif percent_used\
                        \ >= 45 %}\n    {% set bar = '255,140,0' %}\n  {% elif percent_used\
                        \ >= 35 %}\n    {% set bar = '255,165,0' %}\n  {% else %}\n\
                        \    {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background:\
                        \ linear-gradient(\n    to right,\n    rgba({{ bar }}, 0.9)\
                        \ 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n   \
                        \ rgba({{ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar\
                        \ }}, 0.2) 100%\n  );\n}\n"
                  - entity: binary_sensor.truenas_system_data_healthy
                    name: Data - 92.96 TiB
                    card_mod:
                      style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
                        \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
                        \ 'Available GiB') | float(0) %}\n  {% set used = total -\
                        \ available %}\n\n  {% if total > 0 %}\n    {% set percent_used\
                        \ = (used / total * 100) | round(1) %}\n  {% else %}\n   \
                        \ {% set percent_used = 0 %}\n  {% endif %}\n\n  {% if percent_used\
                        \ >= 85 %}\n    {% set bar = '255,0,0' %}\n  {% elif percent_used\
                        \ >= 75 %}\n    {% set bar = '128,0,0' %}\n  {% elif percent_used\
                        \ >= 65 %}\n    {% set bar = '255,99,71' %}\n  {% elif percent_used\
                        \ >= 55 %}\n    {% set bar = '255,69,0' %}\n  {% elif percent_used\
                        \ >= 45 %}\n    {% set bar = '255,140,0' %}\n  {% elif percent_used\
                        \ >= 35 %}\n    {% set bar = '255,165,0' %}\n  {% else %}\n\
                        \    {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background:\
                        \ linear-gradient(\n    to right,\n    rgba({{ bar }}, 0.9)\
                        \ 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n   \
                        \ rgba({{ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar\
                        \ }}, 0.2) 100%\n  );\n}\n"
                  - entity: binary_sensor.truenas_system_temp_healthy
                    name: Temp - 2.91 TiB
                    card_mod:
                      style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
                        \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
                        \ 'Available GiB') | float(0) %}\n  {% set used = total -\
                        \ available %}\n\n  {% if total > 0 %}\n    {% set percent_used\
                        \ = (used / total * 100) | round(1) %}\n  {% else %}\n   \
                        \ {% set percent_used = 0 %}\n  {% endif %}\n\n  {% if percent_used\
                        \ >= 85 %}\n    {% set bar = '255,0,0' %}\n  {% elif percent_used\
                        \ >= 75 %}\n    {% set bar = '128,0,0' %}\n  {% elif percent_used\
                        \ >= 65 %}\n    {% set bar = '255,99,71' %}\n  {% elif percent_used\
                        \ >= 55 %}\n    {% set bar = '255,69,0' %}\n  {% elif percent_used\
                        \ >= 45 %}\n    {% set bar = '255,140,0' %}\n  {% elif percent_used\
                        \ >= 35 %}\n    {% set bar = '255,165,0' %}\n  {% else %}\n\
                        \    {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background:\
                        \ linear-gradient(\n    to right,\n    rgba({{ bar }}, 0.9)\
                        \ 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n   \
                        \ rgba({{ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar\
                        \ }}, 0.2) 100%\n  );\n}\n"
                  - type: divider
                  - type: custom:mini-graph-card
                    name: Disk Temperature
                    tap_action:
                      action: none
                    entities:
                      - entity: sensor.truenas_disks_nvme0n1
                        name: NVME0
                      - entity: sensor.truenas_disks_nvme1n1
                        name: NVME1
                        show_state: false
                      - entity: sensor.truenas_disks_nvme2n1
                        name: NVME2
                        show_state: false
                      - entity: sensor.truenas_disks_nvme3n1
                        name: NVME3
                        show_state: false
                      - entity: sensor.truenas_disks_sda
                        name: sda
                        show_state: false
                      - entity: sensor.truenas_disks_sdb
                        name: sdb
                        show_state: false
                      - entity: sensor.truenas_disks_sdc
                        name: sdc
                        show_state: false
                      - entity: sensor.truenas_disks_sdd
                        name: sdd
                        show_state: false
                      - entity: sensor.truenas_disks_sde
                        name: sde
                        show_state: false
                      - entity: sensor.truenas_disks_sdf
                        name: sdf
                        show_state: false
                      - entity: sensor.truenas_disks_sdg
                        name: sdg
                        show_state: false
                      - entity: sensor.truenas_disks_sdh
                        name: sdh
                        show_state: false
                      - entity: sensor.truenas_disks_sdi
                        name: sdi
                        show_state: false
                      - entity: sensor.truenas_disks_sdj
                        name: sdj
                        show_state: false
                    hours_to_show: 48
                    hour24: true
                    line_width: 3
                    animate: true
                    upper_bound_secondary: 100
                    show:
                      name: true
                      icon: false
                      state: true
                      legend: true
                      fill: fade
                      labels: true
                      labels_secondary: false
                      average: true
                      extrema: true
                      points: hover
                  - entity: sensor.truenas_system_uptime
                    name: 마지막 재부팅
                  - type: custom:hui-element
                    card_type: horizontal-stack
                    cards:
                      - type: button
                        name: Reboot
                        tap_action:
                          action: call-service
                          confirmation:
                            text: 정말로 NAS를 재시작하시겠습니까?
                          service: truenas.system_reboot
                          service_data:
                            entity: sensor.truenas_system_uptime
                      - type: button
                        name: Shutdown
                        tap_action:
                          action: call-service
                          service: truenas.system_shutdown
                          service_data:
                            entity: sensor.truenas_system_uptime
                          confirmation:
                            text: 정말로 NAS를 종료하시겠습니까?
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#system_check_jellyfin'
                button_type: name
                name: Jellyfin Media Server
                icon: mdi:jellyfish
              - type: custom:auto-entities
                card:
                  type: entities
                filter:
                  include:
                    - options: {}
                      domain: media_player
                      integration: jellyfin
                  exclude:
                    - options: {}
                      state: unavailable
                    - options: {}
                      state: unknown
                show_empty: false
              - type: custom:tabbed-card
                options: {}
                tabs:
                  - card:
                      type: custom:upcoming-media-card
                      entity: sensor.radarr_radarr_upcoming_media
                      enable_trailers: true
                      image_style: fanart
                      enable_tooltips: true
                    attributes:
                      label: 영화
                  - card:
                      type: custom:upcoming-media-card
                      entity: sensor.sonarr_upcoming_media
                      enable_trailers: true
                      image_style: fanart
                      enable_tooltips: true
                    attributes:
                      label: TV 프로그램
                  - card:
                      type: custom:upcoming-media-card
                      entity: sensor.anime_sonarr_upcoming_media
                      enable_trailers: true
                      image_style: fanart
                      enable_tooltips: true
                    attributes:
                      label: 애니메이션
      - type: grid
        cards:
          - type: custom:auto-entities
            card:
              type: custom:bubble-card
              card_type: separator
              name: Favorite
              icon: mdi:star
              card_layout: large
            card_param: sub_button
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.scene\n  | map(attribute='entity_id')\
                \      \n  | list\n  | reject('in', area_entities('living_room'))\n\
                \  | reject('in', area_entities('bedroom'))\n  | reject('in', area_entities('kitchen'))\n\
                \  | reject('in', area_entities('bathroom'))\n  | reject('in', area_entities('front_door'))\n\
                \  | reject('is_hidden_entity') -%}\n{{\n  {\n    'entity': ENTITY,\n\
                \    'show_background': 'true',\n    'tap_action': {\n      'action':\
                \ 'perform-action',\n      'perform_action': 'scene.turn_on',\n  \
                \    'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
                \ 'true'\n    }\n  }\n}}, {% endfor %}        \n"
              exclude: []
          - type: custom:auto-entities
            card:
              square: false
              type: grid
              columns: 3
            card_param: cards
            sort:
              method: friendly_name
            filter:
              template: "{% for ENTITY in label_entities('favorite')\n  | reject('match',\
                \ 'scene\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n   \
                \ 'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')|\
                \ replace(' 조명', ''),\n    'icon_tap_action': {\n      'action': 'perform-action',\n\
                \      'perform_action': 'homeassistant.toggle',\n      'target':\
                \ {\n        'entity_id': ENTITY\n      }\n    }        \n  }\n}},\
                \ {% endfor %}        "
            visibility:
              - condition: numeric_state
                entity: sensor.count_favorite_entities
                above: 0
          - type: custom:bubble-card
            card_type: separator
            name: Appliances
            icon: mdi:home-search
            card_layout: large
          - type: horizontal-stack
            cards:
              - type: tile
                entity: binary_sensor.kitchen_washing_machine
                icon: mdi:washing-machine
                features_position: bottom
                vertical: true
                tap_action:
                  action: more-info
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                card_mod:
                  style: "ha-card {\n  {% if states(config.entity) == 'on' -%}\n \
                    \   --card-mod-icon: mdi:washing-machine;\n  {% elif states(config.entity)\
                    \ == 'off' -%}\n    --card-mod-icon: mdi:washing-machine-off;\n\
                    \  {%- else -%}\n    --card-mod-icon: mdi:washing-machine-alert;\n\
                    \  {%- endif %}\n  --tile-color: light-grey !important;      \n\
                    }\nha-tile-icon {\n  --tile-color: {{ 'primary' if states(config.entity)\
                    \ == 'on' else 'grey' }};;\n  animation: {{ 'ironing 3s linear\
                    \ infinite alternate' if states(config.entity) == 'on' else 'none'\
                    \ }};\n}\n@keyframes ironing {\n  0% {\n    transform: translate(-1px,0);\n\
                    \  }\n  100% {\n    transform: translate(1px,0);\n  }\n}\n"
              - type: tile
                entity: sensor.styler_current_status
                name: 스타일러
                icon: mdi:air-purifier
                features_position: bottom
                vertical: true
                color: accent
                tap_action:
                  action: navigate
                  navigation_path: '#styler'
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                card_mod:
                  style: "ha-card {\n  {% if states(config.entity) == 'power_off'\
                    \ -%}\n    --card-mod-icon: mdi:fridge-industrial-off-outline;\n\
                    \  {% elif states(config.entity) == 'initial' -%}\n    --card-mod-icon:\
                    \ mdi:iron;\n  {% elif states(config.entity) == 'complete' -%}\n\
                    \    --card-mod-icon: mdi:hanger;\n  {% elif states(config.entity)\
                    \ == 'reserved' -%}\n    --card-mod-icon: mdi:timer-sand;\n  {%\
                    \ elif states(config.entity) == 'unavailable' -%}\n    --card-mod-icon:\
                    \ mdi:fridge-industrial-alert-outline;\n  {% elif states(config.entity)\
                    \ == 'unknown' -%}\n    --card-mod-icon: mdi:fridge-industrial-alert-outline;\n\
                    \  {%- else -%}\n    --card-mod-icon: mdi:iron;\n  {%- endif %}\n\
                    \  --tile-color: accent !important;      \n}\nha-tile-icon {\n\
                    \  --tile-color: {{ 'grey' if states(config.entity) == 'power_off'\
                    \ else 'accent' }};;\n  animation: {{ 'none' if states(config.entity)\
                    \ == 'power_off' or states(config.entity) == 'reserved' or states(config.entity)\
                    \ == 'unavailable' or states(config.entity) == 'unknown' else\
                    \ 'trembling 0.07s linear infinite alternate' }};\n}\n@keyframes\
                    \ trembling {\n  0% {\n    transform: translate(-1px,0);\n  }\n\
                    \  100% {\n    transform: translate(1px,0);\n  }\n}\n"
              - type: tile
                entity: sensor.oven_machine_state
                name: 오븐
                icon: mdi:microwave
                features_position: bottom
                vertical: true
                tap_action:
                  action: navigate
                  navigation_path: '#oven'
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                card_mod:
                  style: "ha-card {\n  {% if states(config.entity) == 'ready' -%}\n\
                    \    --card-mod-icon: mdi:microwave-off;\n  {% elif states(config.entity)\
                    \ == 'running' -%}\n    --card-mod-icon: mdi:microwave;\n  {%\
                    \ elif states(config.entity) == 'paused' -%}\n    --card-mod-icon:\
                    \ mdi:microwave-off;\n  {%- else -%}\n    --card-mod-icon: mdi:microwave;\n\
                    \  {%- endif %}\n  --tile-color: orange !important;      \n}\n\
                    ha-tile-icon {\n  --tile-color: {{ 'primary' if states(config.entity)\
                    \ == 'on' else 'grey' }};;\n  animation: {{ 'trembling 0.08s linear\
                    \ infinite alternate' if states(config.entity) == 'running' else\
                    \ 'none' }};\n}\n@keyframes trembling {\n  0% {\n    transform:\
                    \ translate(-1px,0);\n  }\n  100% {\n    transform: translate(1px,0);\n\
                    \  }\n}\n"
              - type: tile
                entity: media_player.living_room
                name: 커피머신
                icon: mdi:coffee-outline
                features_position: bottom
                vertical: true
                color: brown
                tap_action:
                  action: navigate
                  navigation_path: '#coffee'
                double_tap_action:
                  action: none
                hold_action:
                  action: none
                card_mod:
                  style: "ha-card {\n  {% if states(config.entity) == 'playing' -%}\n\
                    \    --card-mod-icon: mdi:coffee-outline;\n  {% elif states(config.entity)\
                    \ == 'paused' -%}\n    --card-mod-icon: mdi:coffee-to-go-outline;\n\
                    \  {%- else -%}\n    --card-mod-icon: mdi:coffee-off-outline;\n\
                    \  {%- endif %}\n  --tile-color: brown !important;      \n}\n\
                    ha-tile-icon {\n  --tile-color: {{ 'brown' if states(config.entity)\
                    \ == 'playing' else 'grey' }};;\n  animation: {{ 'trembling 0.07s\
                    \ linear infinite alternate' if states(config.entity) == 'playing'\
                    \ else 'none' }};\n}\n@keyframes trembling {\n  0% {\n    transform:\
                    \ translate(-1px,1px);\n  }\n  100% {\n    transform: translate(1px,1px);\n\
                    \  }\n}\n"
          - type: vertical-stack
            cards:
              - features:
                  - style: icons
                    type: climate-hvac-modes
                  - type: target-temperature
                type: tile
                name: 보일러
                icon: mdi:water-boiler
                features_position: inline
                vertical: false
                hide_state: true
                entity: climate.esp_wallpad_room_1_heater_1
              - features:
                  - style: icons
                    type: climate-hvac-modes
                type: tile
                features_position: inline
                vertical: false
                hide_state: true
                entity: climate.air_conditioner
                name: 에어컨
                icon: mdi:air-conditioner
              - features:
                  - type: vacuum-commands
                    commands:
                      - start_pause
                      - return_home
                type: tile
                features_position: inline
                vertical: false
                entity: vacuum.robot_vacuum
                name: 로봇 청소기
                show_entity_picture: false
                hide_state: true
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#styler'
                button_type: name
                name: 스타일러
                icon: mdi:air-purifier
              - type: history-graph
                entities:
                  - entity: sensor.styler_current_status
              - type: entities
                show_header_toggle: false
                entities:
                  - entity: number.styler_delayed_end
                  - entity: select.styler_operation
                  - type: divider
                  - entity: sensor.styler_current_status
                  - entity: sensor.styler_delayed_end
                  - entity: sensor.styler_remaining_time
                  - entity: binary_sensor.styler_remote_start
                  - entity: sensor.styler_total_time
                  - type: divider
                  - entity: event.styler_notification
                  - entity: event.styler_error
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#oven'
                button_type: name
                name: 오븐
                icon: mdi:microwave
              - type: history-graph
                entities:
                  - entity: sensor.oven_machine_state
              - type: entities
                show_header_toggle: false
                entities:
                  - entity: sensor.oven_machine_state
                    icon: mdi:microwave
                    name: Machine State
                  - type: divider
                  - entity: sensor.oven_oven_mode
                    icon: mdi:microwave
                    name: Oven Mode
                  - entity: sensor.oven_job_state
                    icon: mdi:microwave
                    name: Job State
                  - entity: sensor.oven_completion_time
                    icon: mdi:timer
                    name: Completion Time
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#coffee'
                button_type: name
                name: 커피
                icon: mdi:coffee-maker
              - type: history-graph
                entities:
                  - entity: media_player.living_room
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#light'
                button_type: name
                name: 조명
                icon: mdi:lamps
              - type: custom:auto-entities
                show_empty: false
                card:
                  type: vertical-stack
                card_param: cards
                sort:
                  method: entity_id
                filter:
                  template: ''
                  include:
                    - options:
                        type: tile
                        features:
                          - type: light-brightness
                        features_position: inline
                      group: light.all_lights
                  exclude:
                    - options: {}
                      hidden_by: '*'
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#cover'
                button_type: name
                name: 커버
                icon: mdi:blinds-horizontal
              - type: custom:auto-entities
                show_empty: false
                card:
                  type: vertical-stack
                card_param: cards
                sort:
                  method: entity_id
                filter:
                  template: ''
                  include:
                    - options:
                        type: tile
                        features:
                          - type: cover-position
                        features_position: inline
                      group: cover.all_covers
                  exclude:
                    - options: {}
                      hidden_by: '*'
                    - options: {}
                      entity_id: cover.all_covers
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#media-player'
                icon: mdi:television-speaker
                button_type: name
                name: 미디어 플레이어
              - type: vertical-stack
                cards:
                  - type: conditional
                    conditions:
                      - condition: numeric_state
                        entity: sensor.count_media_player_playing
                        below: 1
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:auto-entities
                          show_empty: false
                          card:
                            type: vertical-stack
                          card_param: cards
                          sort:
                            method: entity_id
                          filter:
                            template: ''
                            include:
                              - options:
                                  type: tile
                                  features:
                                    - type: media-player-volume-slider
                                  features_position: inline
                                  tap_action:
                                    action: more-info
                                  icon_tap_action:
                                    action: toggle
                                group: media_player.all_media_players
                            exclude:
                              - options: {}
                                hidden_by: '*'
                        - type: entities
                          entities:
                            - type: attribute
                              entity: sensor.lastfm_saya6k
                              attribute: play_count
                              name: Play Count
                            - type: attribute
                              entity: sensor.lastfm_saya6k
                              attribute: top_played
                              name: Top Played
                        - type: custom:auto-entities
                          show_empty: false
                          card:
                            type: vertical-stack
                          card_param: cards
                          sort:
                            method: entity_id
                          filter:
                            template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                              \  | select('in', expand('media_player.all_media_players')\
                              \ | map(attribute='entity_id') | list)\n  | select('in',\
                              \ integration_entities('music_assistant'))\n  | reject('is_hidden_entity')\
                              \ -%}\n{{\n  {\n    \"type\": \"custom:mediocre-media-player-card\"\
                              ,\n    \"entity_id\": ENTITY,\n    \"speaker_group\"\
                              : {\n      \"entity_id\": ENTITY,\n      \"entities\"\
                              : [\n      ]\n    },\n    \"ma_entity_id\": ENTITY,\n\
                              \    \"custom_buttons\": [],\n    \"action\": {}   \
                              \    \n  }\n}}, {% endfor %}        "
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#doors'
                icon: mdi:door-open
                button_type: name
                name: 문 열림
              - type: custom:auto-entities
                card:
                  type: custom:multiple-logbook-card
                filter:
                  include:
                    - group: binary_sensor.all_doors
                  exclude: []
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#windows'
                icon: mdi:window-open
                button_type: name
                name: 창문 열림
              - type: custom:auto-entities
                card:
                  type: custom:multiple-logbook-card
                filter:
                  include:
                    - group: binary_sensor.all_windows
                  exclude: []
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#climate'
                button_type: name
                name: 환경
                icon: mdi:fan
              - type: custom:auto-entities
                show_empty: false
                card:
                  type: vertical-stack
                card_param: cards
                sort:
                  method: entity_id
                filter:
                  template: ''
                  include:
                    - options:
                        type: tile
                        features:
                          - type: climate-hvac-modes
                        features_position: inline
                      domain: climate
                    - options:
                        type: tile
                        features:
                          - type: humidifier-modes
                        features_position: inline
                      domain: humidifier
                    - options:
                        type: tile
                        features:
                          - type: climate-fan-modes
                        features_position: inline
                      domain: fan
                  exclude:
                    - options: {}
                      hidden_by: '*'
                    - options: {}
                      entity_id: fan.all_fans
                    - options: {}
                      entity_id: climate.all_climates
                    - options: {}
                      entity_id: humidifier.all_humidifiers
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#steam-wishlist'
                button_type: name
                name: Steam Wishlist on Sales
                icon: mdi:steam
              - type: custom:nintendo-wishlist-card
                entity: sensor.steam_wishlist_76561198124495822
                title: ''
                image_style: backgroundart
                max: 35
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#any_chores_due'
                button_type: name
                name: 집안일
                icon: mdi:broom
                tap_action:
                  action: navigate
                  navigation_path: /a0d7b954_grocy/ingress/../choresoverview
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: /a0d7b954_grocy
              - type: heading
                icon: mdi:broom
                heading_style: title
                heading: 오늘 할 일
              - type: custom:grocy-tasks-chores
                title: ''
                entity:
                  tasks: sensor.grocy_tasks
                  chores: sensor.grocy_chores
                sort: date desc
                layout: horizontal
                almostDueDays: '1'
                hideNotDue: true
                texts:
                  none: 남은 항목이 없습니다!
                  due: '예정:'
                  last: '마지막:'
                iconMapping:
                  chore:
                    '5': mdi:washing-machine
                    '6': mdi:tshirt-v
                    '7': mdi:tshirt-v
                    '8': mdi:washing-machine
                    '10': mdi:coffee-maker
                    '18': mdi:robot-vacuum
                    '20': phu:garbage-organic
                    '25': mdi:bed-king-outline
                    '56': mdi:toilet
                    '67': mdi:countertop
                    '68': mdi:shopping
                    '72': mdi:recycle
                    '73': mdi:recycle
                    '76': mdi:recycle
                    '78': mdi:broom
                    '80': mdi:recycle
                    '82': mdi:recycle
                    '83': mdi:bed-double
                    '84': mdi:trash-can
                    '90': mdi:fridge
                    '94': mdi:gas-burner
                    '97': mdi:hand-back-left
                    '98': mdi:cart
                    '99': mdi:calendar-check
                    '100': mdi:calendar-refresh
                    '101': mdi:lingerie
                    '102': mdi:pipe
                wrapName: true
                hideAlmostDue: false
                showLastDate: true
                showDueDate: false
                relativeDateDays: '365'
              - type: custom:tabbed-card
                options: {}
                tabs:
                  - card:
                      type: custom:grocy-chores-card
                      entity: sensor.grocy_chores
                      title: ''
                      show_quantity: '0'
                      show_assigned: false
                      show_last_tracked: true
                      show_last_tracked_by: false
                      show_track_button: true
                      browser_mod: false
                      show_overflow: true
                      show_chores_without_due: false
                      show_tasks_without_due: false
                      show_divider: true
                      use_icons: true
                      task_icon: null
                      task_icon_size: 24
                      chore_icon: mdi:broom
                      chore_icon_size: 32
                      expand_icon_size: 30
                      use_long_date: false
                      due_in_days_threshold: 5
                      last_tracked_days_threshold: 14
                      use_24_hours: true
                      hide_text_with_no_data: false
                      show_description: true
                      show_empty: true
                      filter: '일상청소:'
                      remove_filter: true
                      custom_translation:
                        Overdue: 기한 경과
                        Due: 기한
                        Yesterday: 어제
                        Today: 오늘
                        Tomorrow: 내일
                        Last tracked: 마지막 실행
                        No todos: 오늘 남은 항목이 없습니다
                        In {number} days: '{number}일 내'
                        '{number} More Items': '{number}개의 추가 항목'
                        '{number} days ago': '{number}일 전'
                        Show Less: 접기
                    attributes:
                      label: 일상 청소
                  - card:
                      type: custom:grocy-chores-card
                      entity: sensor.grocy_chores
                      title: ''
                      show_quantity: '0'
                      show_assigned: false
                      show_last_tracked: true
                      show_last_tracked_by: false
                      show_track_button: true
                      browser_mod: false
                      show_overflow: true
                      show_chores_without_due: false
                      show_tasks_without_due: false
                      show_divider: true
                      use_icons: true
                      task_icon: null
                      task_icon_size: 24
                      chore_icon: mdi:broom
                      chore_icon_size: 32
                      expand_icon_size: 30
                      use_long_date: false
                      due_in_days_threshold: 5
                      last_tracked_days_threshold: 14
                      use_24_hours: true
                      hide_text_with_no_data: false
                      show_description: true
                      show_empty: true
                      filter: '정리정돈:'
                      remove_filter: true
                      custom_translation:
                        Overdue: 기한 경과
                        Due: 기한
                        Yesterday: 어제
                        Today: 오늘
                        Tomorrow: 내일
                        Last tracked: 마지막 실행
                        No todos: 오늘 남은 항목이 없습니다
                        In {number} days: '{number}일 내'
                        '{number} More Items': '{number}개의 추가 항목'
                        '{number} days ago': '{number}일 전'
                        Show Less: 접기
                    attributes:
                      label: 정리정돈
                  - card:
                      type: custom:grocy-chores-card
                      entity: sensor.grocy_chores
                      title: ''
                      show_quantity: '0'
                      show_assigned: false
                      show_last_tracked: true
                      show_last_tracked_by: false
                      show_track_button: true
                      browser_mod: false
                      show_overflow: true
                      show_chores_without_due: false
                      show_tasks_without_due: false
                      show_divider: true
                      use_icons: true
                      task_icon: null
                      task_icon_size: 24
                      chore_icon: mdi:broom
                      chore_icon_size: 32
                      expand_icon_size: 30
                      use_long_date: false
                      due_in_days_threshold: 5
                      last_tracked_days_threshold: 14
                      use_24_hours: true
                      hide_text_with_no_data: false
                      show_description: true
                      show_empty: true
                      filter: '분리수거:'
                      remove_filter: true
                      custom_translation:
                        Overdue: 기한 경과
                        Due: 기한
                        Yesterday: 어제
                        Today: 오늘
                        Tomorrow: 내일
                        Last tracked: 마지막 실행
                        No todos: 오늘 남은 항목이 없습니다
                        In {number} days: '{number}일 내'
                        '{number} More Items': '{number}개의 추가 항목'
                        '{number} days ago': '{number}일 전'
                        Show Less: 접기
                    attributes:
                      label: 분리수거
                  - card:
                      type: custom:grocy-chores-card
                      entity: sensor.grocy_chores
                      title: ''
                      show_quantity: '0'
                      show_assigned: false
                      show_last_tracked: true
                      show_last_tracked_by: false
                      show_track_button: true
                      browser_mod: false
                      show_overflow: true
                      show_chores_without_due: true
                      show_tasks_without_due: false
                      show_divider: true
                      use_icons: true
                      task_icon: null
                      task_icon_size: 24
                      chore_icon: mdi:broom
                      chore_icon_size: 32
                      expand_icon_size: 30
                      use_long_date: false
                      due_in_days_threshold: 5
                      last_tracked_days_threshold: 14
                      use_24_hours: true
                      hide_text_with_no_data: false
                      show_description: true
                      show_empty: true
                      filter: '주기청소:'
                      remove_filter: true
                      custom_translation:
                        Overdue: 기한 경과
                        Due: 기한
                        Yesterday: 어제
                        Today: 오늘
                        Tomorrow: 내일
                        Last tracked: 마지막 실행
                        No todos: 오늘 남은 항목이 없습니다
                        In {number} days: '{number}일 내'
                        '{number} More Items': '{number}개의 추가 항목'
                        '{number} days ago': '{number}일 전'
                        Show Less: 접기
                    attributes:
                      label: 주기 청소
                  - card:
                      type: custom:grocy-chores-card
                      entity: sensor.grocy_chores
                      title: ''
                      show_quantity: '0'
                      show_assigned: false
                      show_last_tracked: true
                      show_last_tracked_by: false
                      show_track_button: true
                      browser_mod: false
                      show_overflow: true
                      show_chores_without_due: false
                      show_tasks_without_due: false
                      show_divider: true
                      use_icons: true
                      task_icon: null
                      task_icon_size: 24
                      chore_icon: mdi:broom
                      chore_icon_size: 32
                      expand_icon_size: 30
                      use_long_date: false
                      due_in_days_threshold: 5
                      last_tracked_days_threshold: 14
                      use_24_hours: true
                      hide_text_with_no_data: false
                      show_description: true
                      show_empty: true
                      filter: '유지보수:'
                      remove_filter: true
                      custom_translation:
                        Overdue: 기한 경과
                        Due: 기한
                        Yesterday: 어제
                        Today: 오늘
                        Tomorrow: 내일
                        Last tracked: 마지막 실행
                        No todos: 오늘 남은 항목이 없습니다
                        In {number} days: '{number}일 내'
                        '{number} More Items': '{number}개의 추가 항목'
                        '{number} days ago': '{number}일 전'
                        Show Less: 접기
                    attributes:
                      label: 유지보수
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#grocy_expiring_products'
                button_type: name
                name: 기한 임박
                icon: mdi:clock-fast
                tap_action:
                  action: navigate
                  navigation_path: /a0d7b954_grocy
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: /a0d7b954_grocy
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.grocy_expiring_products
                    state: 'on'
                card:
                  type: custom:flex-table-card
                  entities:
                    - binary_sensor.grocy_expiring_products
                  title: ''
                  columns:
                    - name: ID
                      data: expiring_products.id
                    - name: 품명
                      data: expiring_products.name
                    - name: 재고
                      data: expiring_products.available_amount
                    - name: 개봉
                      data: expiring_products.amount_opened
                    - name: 소비기한
                      data: expiring_products.best_before_date
                      modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  var date = new\
                        \ Date(x);\n  date.getFullYear()+\". \"+\n  (String(date.getMonth()+\
                        \ 1).padStart(2,'0')+\". \"+\n  String(date.getDate()).padStart(2,'0')\n\
                        \ )\n}"
              - type: entities
                entities:
                  - entity: script.grocy_consume_product_from_stock
                  - entity: script.grocy_open_product
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#grocy_expired_products'
                button_type: name
                name: 기한 도과
                icon: mdi:delete-alert-outline
                tap_action:
                  action: navigate
                  navigation_path: /a0d7b954_grocy
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: /a0d7b954_grocy
              - type: custom:flex-table-card
                entities:
                  - binary_sensor.grocy_expired_products
                title: ''
                columns:
                  - name: ID
                    data: expired_products.id
                    modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  x\n}"
                  - name: 품명
                    data: expired_products.name
                    modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  x\n}"
                  - name: 재고
                    data: expired_products.available_amount
                    modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  x\n}"
                  - name: 개봉
                    data: expired_products.amount_opened
                    modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  x\n}"
                  - name: 소비기한
                    data: expired_products.best_before_date
                    modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  var date = new\
                      \ Date(x);\n  date.getFullYear()+\". \"+\n  (String(date.getMonth()+\
                      \ 1).padStart(2,'0')+\". \"+\n  String(date.getDate()).padStart(2,'0')\n\
                      \ )\n}"
              - type: entities
                entities:
                  - entity: script.grocy_remove_all_expired_product_from_stock
                  - entity: script.grocy_remove_spoiled_product_from_stock
                  - entity: script.grocy_consume_product_from_stock
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.grocy_expiring_products
                    state: 'on'
                card:
                  type: custom:flex-table-card
                  entities:
                    - binary_sensor.grocy_expiring_products
                  title: 기간 임박
                  columns:
                    - name: ID
                      data: expiring_products.id
                    - name: 품명
                      data: expiring_products.name
                    - name: 재고
                      data: expiring_products.available_amount
                    - name: 개봉
                      data: expiring_products.amount_opened
                    - name: 소비기한
                      data: expiring_products.best_before_date
                      modify: "if(x.length == 0)\n{\"-\"}\nelse {\n  var date = new\
                        \ Date(x);\n  date.getFullYear()+\". \"+\n  (String(date.getMonth()+\
                        \ 1).padStart(2,'0')+\". \"+\n  String(date.getDate()).padStart(2,'0')\n\
                        \ )\n}"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#grocy_missing_products'
                button_type: name
                name: 재고 부족
                icon: mdi:flask-round-bottom-empty-outline
                tap_action:
                  action: navigate
                  navigation_path: /a0d7b954_grocy
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: /a0d7b954_grocy
              - type: custom:flex-table-card
                entities:
                  - binary_sensor.grocy_missing_products
                title: ''
                columns:
                  - name: ID
                    data: missing_products.id
                  - name: 품명
                    data: missing_products.name
                  - name: 재고
                    data: missing_products.available_amount
                  - name: 부족 수량
                    data: missing_products.amount_missing
              - type: entities
                entities:
                  - entity: script.grocy_add_product_purchase_to_stock
              - type: todo-list
                entity: todo.shopping_list
                hide_completed: true
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#any_battery_low'
                button_type: name
                name: 배터리
                icon: mdi:battery-low
              - type: custom:auto-entities
                filter:
                  include:
                    - attributes:
                        device_class: battery
                      options:
                        type: custom:entity-progress-card
                        entity: this.entity_id
                        theme: battery
                card:
                  square: false
                  type: grid
                  columns: 2
                show_empty: true
                card_param: cards
                sort:
                  method: state
                  numeric: true
                  ignore_case: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#any_package_delivering'
                button_type: name
                name: 택배
                icon: mdi:package-variant-closed
              - type: entities
                entities:
                  - entity: script.17track_archive_all_arrived_packages
                card_mod:
                  style: "ha-card {\n  border-width: 0px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#any_updates_available'
                button_type: name
                name: 업데이트
                icon: mdi:update
              - type: custom:mushroom-title-card
                title: Home Assistant
              - type: custom:auto-entities
                card:
                  type: vertical-stack
                card_param: cards
                filter:
                  include:
                    - entity_id: update.home_assistant_core_update
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                    - entity_id: update.home_assistant_supervisor_update
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                    - entity_id: update.home_assistant_operating_system_update
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                  exclude: []
                sort:
                  method: entity_id
                show_empty: false
              - type: custom:mushroom-title-card
                title: Add-Ons
              - type: custom:auto-entities
                card:
                  type: vertical-stack
                card_param: cards
                filter:
                  include:
                    - domain: update
                      integration: hassio
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                  exclude:
                    - entity_id: update.home_assistant_core_update
                    - entity_id: update.home_assistant_supervisor_update
                    - entity_id: update.home_assistant_operating_system_update
                sort:
                  method: entity_id
                show_empty: false
              - type: custom:mushroom-title-card
                title: HACS
              - type: custom:auto-entities
                card:
                  type: vertical-stack
                card_param: cards
                filter:
                  include:
                    - domain: update
                      integration: hacs
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                  exclude: []
                sort:
                  method: entity_id
                show_empty: false
              - type: custom:mushroom-title-card
                title: ETC
              - type: custom:auto-entities
                card:
                  type: vertical-stack
                card_param: cards
                filter:
                  include:
                    - domain: update
                      state: 'on'
                      options:
                        type: custom:mushroom-update-card
                        show_buttons_control: true
                        icon_type: entity-picture
                        layout: horizontal
                  exclude:
                    - integration: hassio
                    - integration: hacs
                sort:
                  method: entity_id
                show_empty: false
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#any_bills_to_pay'
                button_type: name
                name: 구독 지불
                icon: mdi:cash-sync
              - type: custom:week-planner-card
                calendars:
                  - entity: calendar.fireflyiii_bills
                days: '7'
                startingDay: today
                startingDayOffset: 0
                hideWeekend: false
                noCardBackground: false
                compact: true
                weather:
                  showCondition: false
                  showTemperature: false
                  showLowTemperature: false
                  useTwiceDaily: false
                locale: ko
                showLocation: false
                hidePastEvents: false
                hideDaysWithoutEvents: true
                hideTodayWithoutEvents: false
                combineSimilarEvents: false
                showLegend: false
                showDescription: true
                texts:
                  fullDay: ''
                  noEvents: 낼 요금 없음
                  today: 오늘
    max_columns: 2
    badges:
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: alarm_control_panel.home_alarm
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: more-info
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: "{% if states(config.card.entity) == 'triggered' %} \n  .badge\
                \ {\n    border-radius: 22px !important;\n    border: 1.5px solid\
                \ var(--accent-color) !important;\n  }\n{% elif states(config.card.entity)\
                \ == 'arming' %} \n  .badge {\n    border-radius: 22px !important;\n\
                \    border: 1.5px solid var(--primary-color) !important;\n  }\n{%\
                \ elif states(config.card.entity).startswith('armed_') %} \n  .badge\
                \ {\n    border-radius: 22px !important;\n    border: 1.5px solid\
                \ var(--primary-color) !important;\n  }\n{% else %}\n  .badge {\n\
                \    border-radius: 22px !important;\n    border: 1px solid light-grey\
                \ !important;\n  }     \n{% endif %}}\n"
              .: "{% if states(config.card.entity) == 'triggered' %}\n  ha-state-icon\
                \ {\n    animation: blinking 1s linear infinite;\n  }\n  @keyframes\
                \ blinking {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% elif\
                \ states(config.card.entity) == 'arming' %}\n  ha-state-icon {\n \
                \   animation: blinking 1.4s linear infinite;\n  }\n  @keyframes blinking\
                \ {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_lights_on
          icon: mdi:lightbulb
          color: amber
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#light'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:lightbulb' if states(config.card.entity)\
                \ |int(0) > 0 else 'mdi:lightbulb-off' }};\n  --card-mod-icon-color:\
                \ {{ 'amber' if states(config.card.entity) |int(0) > 0 else 'grey'\
                \ }};\n   border: {{'1.5px solid var(--primary-color) !important'\
                \ if states(config.card.entity) |int(0) > 0 else '1px solid light-grey\
                \ !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 1.5s ease infinite' if\
                \ states(config.card.entity) | int(0) > 0 else 'none' }};\n}\n@keyframes\
                \ blinking {\n  50% {\n    opacity: 0.25;\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_climates_on
          icon: mdi:fan
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#climate'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:fan' if states(config.card.entity)\
                \ |int(0) > 0 else 'mdi:fan-off' }};\n  --card-mod-icon-color: {{\
                \ 'var(--primary-color)' if states(config.card.entity) |int(0) > 0\
                \ else 'grey' }};\n   border: {{'1.5px solid var(--primary-color)\
                \ !important' if states(config.card.entity) |int(0) > 0 else '1px\
                \ solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'spin 1s linear infinite' if states(config.card.entity)\
                \ |int(0) > 0 else 'none' }};\n}\n@keyframes spin {\n  0% {\n    transform:\
                \ rotate(0deg);\n  }\n  100% {\n    transform: rotate(359deg);\n \
                \ }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_media_player_playing
          icon: mdi:television-speaker
          color: violet
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#media-player'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:television-speaker'\
                \ if states(config.card.entity) |int(0) > 0 else 'mdi:television-speaker-off'\
                \ }};\n  --card-mod-icon-color: {{ 'violet' if states(config.card.entity)\
                \ |int(0) > 0 else 'grey' }};\n   border: {{'1.5px solid var(--primary-color)\
                \ !important' if states(config.card.entity) |int(0) > 0 else '1px\
                \ solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'resizing 0.3s linear infinite\
                \ alternate' if states(config.card.entity) |int(0) > 0 else 'none'\
                \ }};\n}\n@keyframes resizing {\n  0% {\n    transform: scale(1,1);\n\
                \  }\n  25% {\n    transform: scale(1.025,1.025);\n  }\n  50% {\n\
                \    transform: scale(1.05,1.05);\n  }\n  75% {\n    transform: scale(1.075,1.075);\n\
                \  }\n  100% {\n    transform: scale(1.1,1.1);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: false
          show_state: false
          show_icon: true
          entity: sensor.count_covers_open
          icon: mdi:curtains
          color: indigo
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#cover'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:curtains' if states(config.card.entity)\
                \ |int(0) > 0 else 'mdi:curtains-closed' }};\n  --card-mod-icon-color:\
                \ {{ 'indigo' if states(config.card.entity) |int(0) > 0 else 'grey'\
                \ }};\n   border: {{'1.5px solid var(--primary-color) !important'\
                \ if states(config.card.entity) |int(0) > 0 else '1px solid light-grey\
                \ !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 1.5s ease infinite' if\
                \ states(config.card.entity) | int(0) > 0 else 'none' }};\n}\n@keyframes\
                \ blinking {\n  50% {\n    opacity: 0.25;\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: false
          show_state: false
          show_icon: true
          entity: sensor.count_windows_open
          icon: mdi:window-closed-variant
          color: purple
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#windows'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:window-open-variant'\
                \ if states(config.card.entity) |int(0) > 0 else 'mdi:window-closed-variant'\
                \ }};\n  --card-mod-icon-color: {{ 'purple' if states(config.card.entity)\
                \ |int(0) > 0 else 'grey' }};\n   border: {{'1.5px solid var(--accent-color)\
                \ !important' if states(config.card.entity) |int(0) > 0 else '1px\
                \ solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 0.4s linear infinite\
                \ alternate' if states(config.card.entity) |int(0) > 0 else 'none'\
                \ }};\n}\n@keyframes blinking {\n  50% {\n    opacity: 0.2;\n  }\n\
                }\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_windows_open
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: false
          show_state: false
          show_icon: true
          entity: sensor.count_doors_open
          icon: mdi:door-closed
          color: lime
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#doors'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:door-open' if states(config.card.entity)\
                \ |int(0) > 0 else 'mdi:door-closed' }};\n  --card-mod-icon-color:\
                \ {{ 'lime' if states(config.card.entity) |int(0) > 0 else 'grey'\
                \ }};\n   border: {{'1.5px solid var(--accent-color) !important' if\
                \ states(config.card.entity) |int(0) > 0 else '1px solid light-grey\
                \ !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 0.4s linear infinite\
                \ alternate' if states(config.card.entity) |int(0) > 0 else 'none'\
                \ }};\n}\n@keyframes blinking {\n  50% {\n    opacity: 0.2;\n  }\n\
                }\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_doors_open
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_package_delivering
          icon: mdi:package-variant-closed
          color: orange
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.any_package_delivering
          tap_action:
            action: navigate
            navigation_path: '#any_package_delivering'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:package-variant-closed;\n\
                \  --card-mod-icon-color: {{ 'orange' if states(config.card.entity)\
                \ |int(0) > 0 else 'grey' }};\n   border: {{'1.5px solid var(--accent-color)\
                \ !important' if states('alert.any_package_delivering') == 'on' else\
                \ '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'shifting 0.3s linear infinite\
                \ alternate' if states('alert.any_package_delivering') == 'on' else\
                \ 'none' }};\n}\n@keyframes shifting {\n  0% {\n    transform: translate(-2px,0);\n\
                \  }\n  100% {\n    transform: translate(2px,0);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_package_delivering
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_chores_due
          icon: mdi:broom
          color: green
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.any_chores_due
          tap_action:
            action: navigate
            navigation_path: '#any_chores_due'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:broom;\n  --card-mod-icon-color:\
                \ {{ 'green' if states(config.card.entity) |int(0) > 0 else 'grey'\
                \ }};\n   border: {{'1.5px solid var(--accent-color) !important' if\
                \ states('alert.any_chores_due') == 'on' else '1px solid light-grey\
                \ !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'sweeping 0.5s linear infinite\
                \ alternate' if states('alert.any_chores_due') == 'on' else 'none'\
                \ }};\n}\n@keyframes sweeping {\n  0% {\n    transform: rotate(-60deg)\
                \ translate(0,2px);\n  }\n  100% {\n    transform: rotate(-20deg)\
                \ translate(0,2px);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_chores_due
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_battery_low
          icon: mdi:battery
          color: green
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.any_battery_low
          tap_action:
            action: navigate
            navigation_path: '#any_battery_low'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:battery-alert' if states(config.card.entity)\
                \ |int(0) > 0 else 'mdi:battery' }};\n  --card-mod-icon-color: {{\
                \ 'red' if states(config.card.entity) |int(0) > 0 else 'grey' }};\n\
                \   border: {{'1.5px solid var(--accent-color) !important' if states('alert.any_battery_low')\
                \ == 'on' else '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 0.4s linear infinite\
                \ alternate' if states('alert.any_battery_low') == 'on' else 'none'\
                \ }};\n}\n@keyframes blinking {\n  0% {\n    opacity: 0;\n  }\n  100%\
                \ {\n    opacity: 1;\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_battery_low
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.count_updates_available
          icon: mdi:cellphone
          color: primary
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.any_updates_available
          tap_action:
            action: navigate
            navigation_path: '#any_updates_available'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:cellphone-arrow-down'\
                \ if states(config.card.entity) |int(0) > 0 else 'mdi:cellphone' }};\n\
                \  --card-mod-icon-color: {{ 'primary' if states(config.card.entity)\
                \ |int(0) > 0 else 'grey' }};\n   border: {{'1.5px solid var(--accent-color)\
                \ !important' if states('alert.any_updates_available') == 'on' else\
                \ '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'blinking 0.4s linear infinite\
                \ alternate' if states('alert.any_updates_available') == 'on' else\
                \ 'none' }};\n}\n@keyframes blinking {\n  0% {\n    opacity: 0;\n\
                \  }\n  100% {\n    opacity: 1;\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.count_updates_available
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: binary_sensor.grocy_expiring_products
          icon: mdi:clock-fast
          color: orange
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.grocy_expiring_products
          tap_action:
            action: navigate
            navigation_path: '#grocy_expiring_products'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:clock-fast;\n  --card-mod-icon-color:\
                \ {{ 'orange' if states(config.card.entity) == 'on' else 'grey'}};\n\
                \   border: {{'1.5px solid var(--accent-color) !important' if states('alert.grocy_expiring_products')\
                \ == 'on' else '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'shifting 0.3s linear infinite\
                \ alternate' if states('alert.grocy_expiring_products') == 'on' else\
                \ 'none' }};\n}\n@keyframes shifting {\n  0% {\n    transform: translate(-2px,0);\n\
                \  }\n  100% {\n    transform: translate(2px,0);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: state
            entity: binary_sensor.grocy_expiring_products
            state: 'on'
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: binary_sensor.grocy_expired_products
          icon: mdi:delete-alert-outline
          color: red
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.grocy_expired_products
          tap_action:
            action: navigate
            navigation_path: '#grocy_expired_products'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:delete-alert-outline;\n\
                \  --card-mod-icon-color: {{ 'red' if states(config.card.entity) ==\
                \ 'on' else 'grey'}};\n   border: {{'1.5px solid var(--accent-color)\
                \ !important' if states('alert.grocy_expired_products') == 'on' else\
                \ '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'jumping 0.2s linear infinite alternate'\
                \ if states('alert.grocy_expired_products') == 'on' else 'none' }};\n\
                }\n@keyframes jumping {\n  0% {\n    transform: translate(0,-3px);\n\
                \  }\n  100% {\n    transform: translate(0,0px);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: state
            entity: binary_sensor.grocy_expired_products
            state: 'on'
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: binary_sensor.grocy_missing_products
          icon: mdi:flask-round-bottom-empty-outline
          color: purple
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.grocy_missing_products
          tap_action:
            action: navigate
            navigation_path: '#grocy_missing_products'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:flask-round-bottom-empty-outline;\n\
                \  --card-mod-icon-color: {{ 'purple' if states(config.card.entity)\
                \ == 'on' else 'grey'}};\n   border: {{'1.5px solid var(--accent-color)\
                \ !important' if states('alert.grocy_missing_products') == 'on' else\
                \ '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'wobbling 0.3s linear infinite\
                \ alternate' if states('alert.grocy_missing_products') == 'on' else\
                \ 'none' }};\n}\n@keyframes wobbling {\n  0% {\n    transform: rotate(-20deg);\n\
                \  }\n  100% {\n    transform: rotate(+20deg);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: state
            entity: binary_sensor.grocy_missing_products
            state: 'on'
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: sensor.grocy_shopping_list
          icon: mdi:shopping
          color: brown
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: '#grocy_missing_products'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:shopping;\n  --card-mod-icon-color:\
                \ {{ 'brown' if states(config.card.entity) |int(0) > 0 else 'grey'}};\n\
                \   border: {{'1.5px solid var(--accent-color) !important' if states(config.card.entity)\
                \ |int(0) > 0 else '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'wobbling 0.3s linear infinite\
                \ alternate' if states(config.card.entity) |int(0) > 0 else 'none'\
                \ }};\n}\n@keyframes wobbling {\n  0% {\n    transform: rotate(-20deg);\n\
                \  }\n  100% {\n    transform: rotate(+20deg);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: sensor.grocy_shopping_list
            above: 0
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: calendar.fireflyiii_bills
          icon: mdi:cash
          color: green
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: perform-action
            perform_action: alert.toggle
            target:
              entity_id: alert.any_bills_to_pay
          tap_action:
            action: navigate
            navigation_path: '#any_bills_to_pay'
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: {{ 'mdi:cash-fast' if states(config.card.entity)\
                \ == 'on' else 'mdi:cash' }};\n  --card-mod-icon-color: {{ 'green'\
                \ if states(config.card.entity) == 'on' else 'grey'}};\n   border:\
                \ {{'1.5px solid var(--accent-color) !important' if states('alert.any_bills_to_pay')\
                \ == 'on' else '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'shifting 0.3s linear infinite\
                \ alternate' if states('alert.any_bills_to_pay') == 'on' else 'none'\
                \ }};\n}\n@keyframes shifting {\n  0% {\n    transform: translate(-2px,0);\n\
                \  }\n  100% {\n    transform: translate(2px,0);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: state
            entity: alert.any_bills_to_pay
            state: 'on'
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          show_name: true
          show_state: true
          show_icon: true
          entity: todo.shopping_list
          icon: mdi:shopping
          color: green
          name: ' '
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: navigate
            navigation_path: /todo?entity_id=todo.shopping_list
        card_mod:
          style:
            hui-entity-badge$:
              ha-badge$: ".badge {\n  --card-mod-icon: mdi:shopping;\n  --card-mod-icon-color:\
                \ {{ 'green' if states(config.card.entity) |int(0) > 0 else 'grey'}};\n\
                \   border: {{'1.5px solid var(--accent-color) !important' if states(config.card.entity)\
                \ |int(0) > 0 else '1px solid light-grey !important' }};\n}\n"
              .: "ha-state-icon {\n  animation: {{ 'wobbling 0.3s linear infinite\
                \ alternate' if states(config.card.entity) |int(0) > 0 else 'none'\
                \ }};\n}\n@keyframes wobbling {\n  0% {\n    transform: rotate(-20deg);\n\
                \  }\n  100% {\n    transform: rotate(+20deg);\n  }\n}\n"
            .: "ha-card {\n  background: none; \n  border: none;\n}\n"
        visibility:
          - condition: numeric_state
            entity: todo.shopping_list
            above: 0
    header:
      card:
        type: vertical-stack
        cards:
          - type: markdown
            content: '# {{ now().strftime(''%Y년 %-m월 %-d일'') }} ({{ [''월'',''화'',''수'',''목'',''금'',''토'',''일''][now().weekday()]
              }}), {{ now().strftime(''%H:%M'') }}

              '
            text_only: true
            visibility:
              - condition: user
                users:
                  - e2df9f32b8fa4f4b8864113f64dca79c
          - type: custom:paper-buttons-row
            styles:
              justify-content: flex-start
              flex-wrap: wrap
              font-size: 1em
              line-height: 1.2em
              margin: 6px 0 12px 0
              width: 100%
            buttons:
              - layout: name
                name: 지금은
                styles:
                  button:
                    flex-basis: 1
                    flex-shrink: 0
                  name:
                    color: var(--primary-text-color)
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - layout: name|state|icon
                entity: weather.forecast_home
                name: '{{ state_attr(config.entity, ''temperature'') }}°, '
                state_text:
                  clear-night: 맑은 밤
                  cloudy: 흐림
                  fog: 안개
                  hail: null
                  lightning: 낙뢰
                  lightning-rainy: 뇌우
                  partlycloudy: 대체로 흐림
                  pouring: 호우
                  rainy: 비
                  snowy: 눈
                  snowy-rainy: null
                  sunny: 맑음
                  windy: null
                  windy-variant: null
                  exceptional: null
                icon: '{{ ''wi:'' + states(config.entity) }}'
                styles:
                  icon:
                    color: var(--primary-text-color)
                  name:
                    color: var(--primary-text-color)
                  state:
                    color: var(--primary-text-color)
                  button:
                    padding: 2px 8px
                    background-color: var(--card-background-color)
                    border-radius: 24px
                    flex-basis: 1
                    flex-shrink: 0
                    display: flex
              - layout: name
                name: 이고,
                styles:
                  button:
                    flex-basis: 1
                    flex-shrink: 0
                  name:
                    color: var(--primary-text-color)
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - layout: name
                name: 최고기온은
                styles:
                  button:
                    flex-basis: 1
                    flex-shrink: 0
                  name:
                    color: var(--primary-text-color)
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - layout: name
                entity: weather.forecast_home
                name: '{{ state_attr(''weather.forecast_home'', ''temperature'') }}°🔺'
                styles:
                  name:
                    color: var(--primary-text-color)
                  button:
                    padding: 2px 8px
                    background-color: var(--card-background-color)
                    border-radius: 24px
                    flex-basis: 1
                    flex-shrink: 0
                    display: flex
              - layout: name
                name: 에 최저
                styles:
                  button:
                    flex-basis: 1
                    flex-shrink: 0
                  name:
                    color: var(--primary-text-color)
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - layout: name
                entity: weather.forecast_home
                name: '{{ state_attr(''weather.forecast_home'', ''temperature'') }}°🔻'
                styles:
                  name:
                    color: var(--primary-text-color)
                  button:
                    padding: 2px 8px
                    background-color: var(--card-background-color)
                    border-radius: 24px
                    flex-basis: 1
                    flex-shrink: 0
                    display: flex
              - layout: name
                name: 입니다.
                styles:
                  button:
                    flex-basis: 1
                    flex-shrink: 0
                  name:
                    color: var(--primary-text-color)
                tap_action:
                  action: none
                hold_action:
                  action: none
                double_tap_action:
                  action: none
              - layout: state
                entity: sensor.forecast_precipitation
                styles:
                  state:
                    color: var(--primary-text-color)
                  button:
                    padding: 2px 8px
                    background-color: var(--card-background-color)
                    border-radius: 24px
                    flex-basis: 1
                    flex-shrink: 0
                    display: flex
                tap_action:
                  action: more-info
      layout: responsive
      badges_position: top
      badges_wrap: wrap
    top_margin: false
  - type: sections
    max_columns: 2
    path: climate
    title: 환경
    icon: mdi:thermometer-water
    subview: true
    sections:
      - type: grid
        cards:
          - type: heading
            heading_style: title
            heading: 실내 온도
            icon: mdi:thermometer
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: history-graph
              hours_to_show: 168
              expand_legend: false
            filter:
              include:
                - options: {}
                  entity_id: sensor.indoor_average_temperature
                - options: {}
                  entity_id: sensor.seoul_temperature
                - options: {}
                  group: sensor.indoor_average_temperature
              exclude:
                - options: {}
                  state: unavailable
                - options: {}
                  entity_id: sensor.seoul_temperature
          - type: heading
            heading_style: title
            heading: 실내 습도
            icon: mdi:water
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: history-graph
              hours_to_show: 168
              expand_legend: false
            filter:
              include:
                - options: {}
                  entity_id: sensor.seoul_humidity
                - options: {}
                  entity_id: sensor.indoor_average_humidity
                - options: {}
                  group: sensor.indoor_average_humidity
              exclude:
                - options: {}
                  state: unavailable
                - options: {}
                  entity_id: sensor.seoul_humidity
    badges:
      - type: custom:modern-circular-gauge-badge
        entity: sensor.living_room_netatmo_health_index
        show_unit: false
      - type: custom:modern-circular-gauge-badge
        entity: sensor.living_room_netatmo_noise
        min: 30
        max: 100
        smooth_segments: true
        segments:
          - color:
              - 0
              - 255
              - 255
            from: 30
          - color:
              - 255
              - 0
              - 0
            from: 105
    cards: []
  - icon: mdi:home-lightning-bolt
    title: 에너지
    path: energy
    type: sections
    cards: []
    subview: true
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: energy-date-selection
          - type: energy-distribution
            link_dashboard: false
          - type: energy-devices-graph
      - type: grid
        cards:
          - type: entities
            title: 전기 요금
            entities:
              - type: custom:energy-entity-row
                entity: sensor.utility_total_electricity
                name: 사용량
              - type: section
                label: 전기요금
              - entity: sensor.utility_this_month_electricity
                name: 당월 전기 사용량
              - entity: sensor.electricity_bill_used
                name: 당월 전기 요금 (사용)
              - entity: sensor.electricity_bill_forecast
                name: 당월 전기 요금 (예상)
              - type: attribute
                entity: sensor.electricity_bill_used
                name: 누진단계
                attribute: 누진단계_기타
              - type: divider
              - entity: sensor.electricity_bill_prev
          - type: entities
            entities:
              - type: section
                label: 도시가스
              - type: custom:energy-entity-row
                entity: sensor.utility_total_gas
                name: 사용량
                icon: mdi:fire
              - type: section
                label: 수도
              - type: custom:energy-entity-row
                entity: sensor.utility_total_water
                name: 사용량
                icon: mdi:water
            title: 기타
    badges:
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.utility_this_month_electricity
        color: yellow
        icon: mdi:lightning-bolt
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.utility_this_month_gas
        icon: mdi:fire
        color: red
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.utility_this_month_water
        color: ''
        icon: mdi:water
  - path: system
    type: sections
    max_columns: 2
    title: 시스템
    subview: true
    sections:
      - type: grid
        cards:
          - type: custom:stack-in-card
            show_header_toggle: false
            cards:
              - type: horizontal-stack
                cards:
                  - type: vertical-stack
                    title: Home Assistant
                    cards:
                      - type: picture
                        image: /local/raspberry-pi-5.png
                        card_mod:
                          style: "ha-card {\n  border: 0px;\n}\n"
                  - type: entities
                    entities:
                      - entity: sensor.system_monitor_processor_temperature
                        name: Temp
                        card_mod:
                          style: "hui-generic-entity-row {\n  background:\n    {%\
                            \ set perc = states(config.entity) | float(0) %}\n   \
                            \ {% set rest = 100 - perc %}\n\n    {% if perc >= 95\
                            \ %}\n      {% set bar = '255,0,0' %}\n    {% elif perc\
                            \ >= 75 %}\n      {% set bar = '128,0,0' %}\n    {% elif\
                            \ perc >= 67.5 %}\n      {% set bar = '255,165,0' %}\n\
                            \    {% elif perc >= 60 %}\n      {% set bar = '0,100,0'\
                            \ %}\n    {% else %}\n      {% set bar = '0,128,0' %}\n\
                            \    {% endif %}\n\n    linear-gradient(\n      to right,\n\
                            \      rgba({{ bar }}, 0.9) 0%,\n      rgba({{ bar }},\
                            \ 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{ perc\
                            \ }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                      - entity: sensor.system_monitor_fan_speed
                        name: Fan
                        icon: mdi:fan
                        card_mod:
                          style: "hui-generic-entity-row {\n  background:\n    {%\
                            \ set perc = states(config.entity) | float(0) %}\n   \
                            \ {% set rest = 100 - perc %}\n\n    {% if perc >= 8000\
                            \ %}\n      {% set bar = '255,0,0' %}\n    {% elif perc\
                            \ >= 6000 %}\n      {% set bar = '128,0,0' %}\n    {%\
                            \ elif perc >= 4000 %}\n      {% set bar = '255,165,0'\
                            \ %}\n    {% elif perc >= 2000 %}\n      {% set bar =\
                            \ '0,100,0' %}\n    {% else %}\n      {% set bar = '0,128,0'\
                            \ %}\n    {% endif %}\n\n    linear-gradient(\n      to\
                            \ right,\n      rgba({{ bar }}, 0.9) 0%,\n      rgba({{\
                            \ bar }}, 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3)\
                            \ {{ perc }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n\
                            }\n"
                      - entity: sensor.system_monitor_processor_use
                        name: Cpu
                        card_mod:
                          style: "hui-generic-entity-row {\n  background:\n    {%\
                            \ set perc = states(config.entity) | float(0) %}\n   \
                            \ {% set rest = 100 - perc %}\n\n    {% if perc >= 85\
                            \ %}\n      {% set bar = '255,0,0' %}\n    {% elif perc\
                            \ >= 70 %}\n      {% set bar = '128,0,0' %}\n    {% elif\
                            \ perc >= 55 %}\n      {% set bar = '255,165,0' %}\n \
                            \   {% elif perc >= 40 %}\n      {% set bar = '0,100,0'\
                            \ %}\n    {% else %}\n      {% set bar = '0,128,0' %}\n\
                            \    {% endif %}\n\n    linear-gradient(\n      to right,\n\
                            \      rgba({{ bar }}, 0.9) 0%,\n      rgba({{ bar }},\
                            \ 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{ perc\
                            \ }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                      - entity: sensor.system_monitor_memory_usage
                        name: Mem
                        card_mod:
                          style: "hui-generic-entity-row {\n  background:\n    {%\
                            \ set perc = states(config.entity) | float(0) %}\n   \
                            \ {% set rest = 100 - perc %}\n\n    {% if perc >= 85\
                            \ %}\n      {% set bar = '255,0,0' %}\n    {% elif perc\
                            \ >= 70 %}\n      {% set bar = '128,0,0' %}\n    {% elif\
                            \ perc >= 55 %}\n      {% set bar = '255,165,0' %}\n \
                            \   {% elif perc >= 40 %}\n      {% set bar = '0,100,0'\
                            \ %}\n    {% else %}\n      {% set bar = '0,128,0' %}\n\
                            \    {% endif %}\n\n    linear-gradient(\n      to right,\n\
                            \      rgba({{ bar }}, 0.9) 0%,\n      rgba({{ bar }},\
                            \ 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{ perc\
                            \ }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                      - entity: sensor.system_monitor_disk_usage
                        name: Disk
                        card_mod:
                          style: "hui-generic-entity-row {\n  background:\n    {%\
                            \ set perc = states(config.entity) | float(0) %}\n   \
                            \ {% set rest = 100 - perc %}\n\n    {% if perc >= 85\
                            \ %}\n      {% set bar = '255,0,0' %}\n    {% elif perc\
                            \ >= 75 %}\n      {% set bar = '128,0,0' %}\n    {% elif\
                            \ perc >= 65 %}\n      {% set bar = '255,165,0' %}\n \
                            \   {% elif perc >= 45 %}\n      {% set bar = '0,100,0'\
                            \ %}\n    {% else %}\n      {% set bar = '0,128,0' %}\n\
                            \    {% endif %}\n\n    linear-gradient(\n      to right,\n\
                            \      rgba({{ bar }}, 0.9) 0%,\n      rgba({{ bar }},\
                            \ 0.6) {{ perc }}%,\n      rgba({{ bar }}, 0.3) {{ perc\
                            \ }}%,\n      rgba({{ bar }}, 0.1) 100%\n    );\n}\n"
                    card_mod:
                      style: "ha-card {\n  border: 0px;\n}                \n"
              - type: entities
                entities:
                  - type: attribute
                    entity: update.home_assistant_core_update
                    attribute: installed_version
                    icon: mdi:home-assistant
                    name: Core
                  - type: attribute
                    entity: update.home_assistant_supervisor_update
                    attribute: installed_version
                    icon: mdi:home-assistant
                    name: Supervisor
                  - type: attribute
                    entity: update.home_assistant_operating_system_update
                    attribute: installed_version
                    icon: mdi:home-assistant
                    name: OS
                  - type: divider
                  - entity: sensor.homeassistant_db_size
                    name: MariaDB
                    icon: mdi:database
                  - entity: sensor.victoriametrics_db_size
                    name: VictoriaMetrics
                    icon: mdi:chart-line
                  - entity: sensor.home_assistant_log_size
                    name: Log
                  - type: divider
                  - entity: sensor.uptime
                    name: 마지막 재부팅
                  - entity: sensor.backup_last_successful_automatic_backup
                    name: 최근 백업
                  - type: custom:hui-element
                    card_type: horizontal-stack
                    cards:
                      - type: button
                        name: Restart
                        tap_action:
                          action: perform-action
                          confirmation:
                            text: 정말로 재시작하시겠습니까?
                          perform_action: homeassistant.restart
                          action_data: {}
                      - type: button
                        name: Reload
                        tap_action:
                          action: perform-action
                          confirmation:
                            text: 정말로 리로드 하시겠습니까?
                          perform_action: homeassistant.reload_all
                          action_data: {}
                      - type: button
                        name: Reboot
                        tap_action:
                          action: perform-action
                          confirmation:
                            text: 정말로 리부트 하시겠습니까?
                          perform_action: hassio.host_reboot
                          action_data: {}
      - type: grid
        cards:
          - show_name: true
            show_icon: true
            show_state: true
            type: glance
            entities:
              - entity: sensor.integrations
                name: 통합
              - entity: sensor.custom_integrations
                name: 사용자통합
              - entity: sensor.areas
                name: 영역
              - entity: sensor.zones
                name: 지역
              - entity: sensor.devices
                name: 장치
              - entity: sensor.entities
                name: 구성요소
            columns: 6
            state_color: false
          - type: custom:apexcharts-card
            chart_type: donut
            apex_config:
              fill:
                type: gradient
                gradient:
                  shade: dark
                  shadeIntensity: 0.1
                  opacityFrom: 0.9
                  opacityTo: 0.85
                  stops:
                    - 0
                    - 90
                    - 100
              chart:
                fontFamily: SF Pro Text
              legend:
                position: left
                fontSize: 13px
                fontWeight: 300
                markers:
                  width: 16
                  height: 25
                  customHTML:
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:robot\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:radiobox-blank\"\
                      \ style=\"--mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:account\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:lightbulb\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:cast\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:eye\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:flash\" style=\"\
                      --mdc-icon-size: 12px;\"></ha-icon>`\n}"
                    - "EVAL:() => {\n  return `<ha-icon icon=\"hass:home-assistant\"\
                      \ style=\"--mdc-icon-size: 12px;\"></ha-icon>`\n}"
              stroke:
                show: true
                width: 0.4
              dataLabels:
                enabled: false
                style:
                  fontSize: 12px
                  fontWeight: 700
                dropShadow:
                  enabled: true
                  top: 0
                  left: 0
                  blur: 3
                  color: black
                  opacity: 0.1
              plotOptions:
                pie:
                  startAngle: 0
                  endAngle: 360
                  expandOnClick: true
                  offsetX: 0
                  offsetY: 0
                  customScale: 1
                  dataLabels:
                    offset: 0
                    minAngleToShowLabel: 10
                  donut:
                    size: 65%
                    background: transparent
                    labels:
                      show: true
                      value:
                        fontSize: 42px
                        fontWeight: 700
                        offsetY: 16
                      total:
                        show: true
                        label: Total Entities
                        fontSize: 15px
                        fontWeight: 800
            series:
              - entity: sensor.template_domain_counter
                attribute: automation
                name: Automations
              - entity: sensor.template_domain_counter
                attribute: binary_sensor
                name: Binary sensors
              - entity: sensor.template_domain_counter
                attribute: device_tracker
                name: Device trackers
              - entity: sensor.template_domain_counter
                attribute: light
                name: Lights
              - entity: sensor.template_domain_counter
                attribute: media_player
                name: Media players
              - entity: sensor.template_domain_counter
                attribute: sensor
                name: Sensors
              - entity: sensor.template_domain_counter
                attribute: switch
                name: Switches
              - entity: sensor.template_domain_counter
                attribute: other
                name: Other
          - type: custom:auto-entities
            card:
              type: custom:apexcharts-card
              graph_span: 1year
              apex_config:
                yaxis:
                  show: true
                  decimalsInFloat: 0
                  labels:
                    style:
                      colors:
                        - rgba(255, 255, 255, 0.5)
                      fontSize: 13px
                      fontWeight: 200
                    offsetX: -2
                grid:
                  show: true
                  borderColor: rgba(112, 135, 164, 0.1)
                title:
                  text: My GitHub
                  style:
                    color: var(--primary-text-color)
                    fontSize: 30px
                    fontWeight: 1000
                tooltip:
                  style:
                    fontSize: 14px
                  x:
                    show: true
                    formatter: "EVAL:(timestamp) => {\n  let date = new Date(timestamp).toLocaleString('ko-KR',\
                      \ {year: '2-digit', month:'long'});\n  return date.replace('\
                      \ ', ' ');\n}\n"
                xaxis:
                  tooltip:
                    enabled: false
                  crosshairs:
                    show: false
                  axisTicks:
                    show: false
                  axisBorder:
                    show: true
                    color: rgba(112, 135, 164, 0.5)
                    height: 1
                  labels:
                    style:
                      fontSize: 15px
                      fontWeight: 500
                    offsetX: -1
                    formatter: "EVAL:(timestamp) => {\n  return new Date(timestamp).toLocaleString('en-US',\
                      \ {year: '2-digit', month: 'short'}).replace(' ', ' ');\n}\n"
                chart:
                  height: 300px
                fill:
                  type: gradient
                  gradient:
                    type: vertical
                    shadeIntensity: 0.2
                    opacityFrom: 0.7
                    opacityTo: 0.1
                    stops:
                      - 0
                      - 90
                      - 100
                stroke:
                  curve: smooth
                  width: 3
              all_series_config:
                type: area
                fill_raw: last
            card_params: series
            filter:
              include:
                - integration: github
                  entity_id: sensor.*stars
              exclude: []
    icon: mdi:chip
    cards: []
    badges:
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          entity: binary_sensor.rpi_power_status
          icon: mdi:ethernet
          show_name: true
          show_state: false
          name: PoE
          color: black
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: more-info
        card_mod:
          style:
            hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.rpi_power_status',\
              \ 'off') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
              \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.rpi_power_status',\
              \ 'off') else 'rgba(255,0,0,0.1)'}};\n  --icon-primary-color: black;\n\
              \  }\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          entity: binary_sensor.openthread_border_router_running
          icon: phu:thread-net
          show_name: true
          show_state: false
          name: Thread
          color: black
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: more-info
        card_mod:
          style:
            hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.openthread_border_router_running',\
              \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
              \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.openthread_border_router_running',\
              \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          entity: binary_sensor.matter_server_running
          icon: phu:matter
          show_name: true
          show_state: false
          name: Matter
          color: black
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: more-info
        card_mod:
          style:
            hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.matter_server_running',\
              \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
              \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.matter_server_running',\
              \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
      - type: custom:mod-card
        card:
          type: custom:hui-entity-badge
          entity: binary_sensor.knxd_daemon_running
          icon: phu:knx
          show_name: true
          show_state: false
          name: KNX
          color: black
          double_tap_action:
            action: none
          hold_action:
            action: none
          tap_action:
            action: more-info
        card_mod:
          style:
            hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.knxd_daemon_running',\
              \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
              \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.knxd_daemon_running',\
              \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
  - title: 거실
    path: living_room
    icon: mdi:sofa
    subview: true
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 장면
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 2
                  square: false
                card_param: cards
                filter:
                  template: "{% set living_room_entities = area_entities('living_room')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ living_room_entities) | list | length > 0) -%}\n{{\n  {\n  \
                    \  'type': 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 0px) and (max-width: 767px)'
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 4
                  square: false
                card_param: cards
                filter:
                  template: "{% set living_room_entities = area_entities('living_room')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ living_room_entities) | list | length > 0) -%}\n{{\n  {\n  \
                    \  'type': 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
            grid_options:
              columns: full
        visibility:
          - condition: numeric_state
            entity: sensor.count_living_room_scene
            above: 0
        column_span: 2
      - type: grid
        cards:
          - type: heading
            heading: 스피커 및 TV
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('living_room'))\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('거실 ', ''),\n    'vertical':\
                \ false,\n    'show_entity_picture': true,\n    'state_content': [\n\
                \      'media_title',\n      'media_artist'\n    ],\n    'features':\
                \ [\n      {\n        \"type\": \"media-player-volume-slider\"\n \
                \     }\n    ],\n    'tap_action': {\n      'action': 'navigate',\n\
                \      'navigation_path': '#' + ENTITY | replace('media_player.',\
                \ '')\n    }\n  }\n}}, {% endfor %}"
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('living_room'))      \n\
                \  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'vertical-stack',\n\
                \    'cards': [\n      {\n        'type': 'custom:bubble-card',\n\
                \        'card_type': 'pop-up',\n        'hash': '#' + ENTITY | replace('media_player.',\
                \ ''),\n        'icon': 'mdi:television-speaker',\n        'button_type':\
                \ 'name',\n        'name': state_attr(ENTITY, 'friendly_name')\n \
                \     },\n      {\n        \"type\": \"custom:mediocre-massive-media-player-card\"\
                ,\n        \"entity_id\": ENTITY,\n        \"mode\": \"in-card\",\n\
                \        \"ma_entity_id\": ENTITY\n      }\n    ]\n  }\n}}, {% endfor\
                \ %}"
        visibility:
          - condition: numeric_state
            entity: sensor.count_living_room_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 조명
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
                \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n  \
                \  'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('거실 ', '')\n  }\n}}, {% endfor %}        "
        column_span: 1
        visibility:
          - condition: numeric_state
            entity: sensor.count_living_room_light
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 환경
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
                \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('거실 ', '')\n  }\n}},\
                \ {% endfor %}  "
        column_span: 1
        visibility:
          - condition: numeric_state
            entity: sensor.count_living_room_climate
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 스위치
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
                \ '(switch)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n\
                \    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('거실 ', '')\n  }\n}}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_living_room_switch
            above: 0
    badges:
      - type: custom:modern-circular-gauge-badge
        entity: sensor.living_room_average_temperature
        show_name: true
        show_icon: true
        name: 온도
        needle: false
        segments:
          - from: 13
            color:
              - 11
              - 182
              - 239
          - from: 19
            color:
              - 43
              - 255
              - 0
          - from: 24
            color:
              - 252
              - 161
              - 3
        visibility:
          - condition: state
            entity: sensor.living_room_average_temperature
            state_not: unavailable
          - condition: state
            entity: sensor.living_room_average_temperature
            state_not: unknown
        smooth_segments: true
      - type: custom:modern-circular-gauge-badge
        entity: sensor.living_room_average_humidity
        show_name: true
        show_icon: true
        name: 습도
        needle: false
        visibility:
          - condition: state
            entity: sensor.living_room_average_humidity
            state_not: unavailable
          - condition: state
            entity: sensor.living_room_average_humidity
            state_not: unknown
    cards: []
  - title: 침실
    path: bedroom
    icon: mdi:bed-king
    type: sections
    max_columns: 2
    subview: true
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 장면
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 2
                  square: false
                card_param: cards
                filter:
                  template: "{% set bedroom_entities = area_entities('bedroom') |\
                    \ list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ bedroom_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 0px) and (max-width: 767px)'
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 4
                  square: false
                card_param: cards
                filter:
                  template: "{% set bedroom_entities = area_entities('bedroom') |\
                    \ list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ bedroom_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
            grid_options:
              columns: full
        column_span: 2
        visibility:
          - condition: numeric_state
            entity: sensor.count_bedroom_scene
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 스피커 및 TV
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('bedroom'))\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('거실 ', ''),\n    'vertical':\
                \ false,\n    'show_entity_picture': true,\n    'state_content': [\n\
                \      'media_title',\n      'media_artist'\n    ],\n    'features':\
                \ [\n      {\n        \"type\": \"media-player-volume-slider\"\n \
                \     }\n    ],\n    'tap_action': {\n      'action': 'navigate',\n\
                \      'navigation_path': '#' + ENTITY | replace('media_player.',\
                \ '')\n    }\n  }\n}}, {% endfor %}"
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('bedroom'))      \n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'vertical-stack',\n    'cards': [\n  \
                \    {\n        'type': 'custom:bubble-card',\n        'card_type':\
                \ 'pop-up',\n        'hash': '#' + ENTITY | replace('media_player.',\
                \ ''),\n        'icon': 'mdi:television-speaker',\n        'button_type':\
                \ 'name',\n        'name': state_attr(ENTITY, 'friendly_name')\n \
                \     },\n      {\n        \"type\": \"custom:mediocre-massive-media-player-card\"\
                ,\n        \"entity_id\": ENTITY,\n        \"mode\": \"in-card\",\n\
                \        \"ma_entity_id\": ENTITY\n      }\n    ]\n  }\n}}, {% endfor\
                \ %}"
        visibility:
          - condition: numeric_state
            entity: sensor.count_bedroom_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 조명
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
                \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n  \
                \  'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('침실 ', '')\n  }\n}}, {% endfor %}        "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bedroom_light
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 환경
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
                \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('침실 ', '')\n  }\n}},\
                \ {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bedroom_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading_style: title
            heading: 스위치
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
                \ '(switch)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n\
                \    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('침실 ', '')\n  }\n}}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bedroom_switch
            above: 0
    badges:
      - type: custom:auto-entities
        card:
          type: custom:mushroom-chips-card
          alignment: center
        filter:
          template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        card_param: chips
    cards: []
  - title: 주방
    path: kitchen
    icon: mdi:stove
    subview: true
    type: sections
    max_columns: 2
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 장면
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 2
                  square: false
                card_param: cards
                filter:
                  template: "{% set kitchen_entities = area_entities('kitchen') |\
                    \ list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ kitchen_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 0px) and (max-width: 767px)'
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 4
                  square: false
                card_param: cards
                filter:
                  template: "{% set kitchen_entities = area_entities('kitchen') |\
                    \ list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ kitchen_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
            grid_options:
              columns: full
        column_span: 2
        visibility:
          - condition: numeric_state
            entity: sensor.count_kitchen_scene
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 스피커 및 TV
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('kitchen'))\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('주방 ', ''),\n    'vertical':\
                \ false,\n    'show_entity_picture': true,\n    'state_content': [\n\
                \      'media_title',\n      'media_artist'\n    ],\n    'features':\
                \ [\n      {\n        \"type\": \"media-player-volume-slider\"\n \
                \     }\n    ]\n  }\n}}, {% endfor %}"
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('kitchen'))      \n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'vertical-stack',\n    'cards': [\n  \
                \    {\n        'type': 'custom:bubble-card',\n        'card_type':\
                \ 'pop-up',\n        'hash': '#' + ENTITY | replace('media_player.',\
                \ ''),\n        'icon': 'mdi:television-speaker',\n        'button_type':\
                \ 'name',\n        'name': state_attr(ENTITY, 'friendly_name')\n \
                \     },\n      {\n        \"type\": \"custom:mediocre-massive-media-player-card\"\
                ,\n        \"entity_id\": ENTITY,\n        \"mode\": \"in-card\",\n\
                \        \"ma_entity_id\": ENTITY\n      }\n    ]\n  }\n}}, {% endfor\
                \ %}"
        visibility:
          - condition: numeric_state
            entity: sensor.count_kitchen_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 조명
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
                \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n  \
                \  'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
        visibility:
          - condition: numeric_state
            entity: sensor.count_kitchen_light
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 환경
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
                \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('주방 ', '')\n  }\n}},\
                \ {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_kitchen_climate
            above: 0
      - type: grid
        cards:
          - type: heading
            heading_style: title
            heading: 스위치
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
                \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n\
                \    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('주방 ', '')\n  }\n}}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_kitchen_switch
            above: 0
    badges:
      - type: custom:auto-entities
        card:
          type: custom:mushroom-chips-card
          alignment: center
        filter:
          template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        card_param: chips
    cards: []
  - type: sections
    max_columns: 2
    path: bathroom
    title: 화장실
    icon: mdi:toilet
    subview: true
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 장면
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 2
                  square: false
                card_param: cards
                filter:
                  template: "{% set bathroom_entities = area_entities('bathroom')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ bathroom_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 0px) and (max-width: 767px)'
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 4
                  square: false
                card_param: cards
                filter:
                  template: "{% set bathroom_entities = area_entities('bathroom')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ bathroom_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
            grid_options:
              columns: full
        column_span: 2
        visibility:
          - condition: numeric_state
            entity: sensor.count_bathroom_scene
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 스피커 및 TV
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('bathroom'))\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('화장실 ', ''),\n    'vertical':\
                \ false,\n    'show_entity_picture': true,\n    'state_content': [\n\
                \      'media_title',\n      'media_artist'\n    ],\n    'features':\
                \ [\n      {\n        \"type\": \"media-player-volume-slider\"\n \
                \     }\n    ],\n    'tap_action': {\n      'action': 'navigate',\n\
                \      'navigation_path': '#' + ENTITY | replace('media_player.',\
                \ '')\n    }        \n  }\n}}, {% endfor %}"
          - type: custom:auto-entities
            card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('bathroom'))      \n  |\
                \ reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'vertical-stack',\n\
                \    'cards': [\n      {\n        'type': 'custom:bubble-card',\n\
                \        'card_type': 'pop-up',\n        'hash': '#' + ENTITY | replace('media_player.',\
                \ ''),\n        'icon': 'mdi:television-speaker',\n        'button_type':\
                \ 'name',\n        'name': state_attr(ENTITY, 'friendly_name')\n \
                \     },\n      {\n        \"type\": \"custom:mediocre-massive-media-player-card\"\
                ,\n        \"entity_id\": ENTITY,\n        \"mode\": \"in-card\",\n\
                \        \"ma_entity_id\": ENTITY\n      }\n    ]\n  }\n}}, {% endfor\
                \ %}"
        visibility:
          - condition: numeric_state
            entity: sensor.count_bathroom_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 조명
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
                \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n  \
                \  'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}        "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bathroom_light
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 환경
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
                \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('화장실 ', '')\n  }\n\
                }}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bathroom_climate
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 스위치
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
                \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n\
                \    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_bathroom_switch
            above: 0
    cards: []
    badges: []
  - type: sections
    max_columns: 2
    subview: true
    path: entrance
    title: 현관
    icon: mdi:door-closed-lock
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 장면
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: vertical-stack
            cards:
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 2
                  square: false
                card_param: cards
                filter:
                  template: "{% set entrance_entities = area_entities('entrance')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ entrance_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 0px) and (max-width: 767px)'
              - type: custom:auto-entities
                card:
                  type: grid
                  columns: 4
                  square: false
                card_param: cards
                filter:
                  template: "{% set entrance_entities = area_entities('entrance')\
                    \ | list %}\n{% for ENTITY in states.scene\n  if ENTITY.attributes.entity_id\
                    \ is defined\n  and (ENTITY.attributes.entity_id | select('in',\
                    \ entrance_entities) | list | length > 0) -%}\n{{\n  {\n    'type':\
                    \ 'tile',\n    'entity': ENTITY.entity_id,\n    'hide_state':\
                    \ 'true',\n    'grid_options': {\n      'columns': '6',\n    \
                    \  'rows': '1'\n    }\n  }\n}}, {% endfor %}\n"
                show_empty: false
                grid_options:
                  columns: full
                visibility:
                  - condition: screen
                    media_query: '(min-width: 768px)'
            grid_options:
              columns: full
        column_span: 2
        visibility:
          - condition: numeric_state
            entity: sensor.count_front_door_scene
            above: 0
      - type: grid
        cards:
          - type: heading
            heading_style: title
            heading: 스피커 및 TV
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', area_entities('entrance'))\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('현관 ', ''),\n    'vertical':\
                \ false,\n    'show_entity_picture': true,\n    'state_content': [\n\
                \      'media_title',\n      'media_artist'\n    ],\n    'features':\
                \ [\n      {\n        \"type\": \"media-player-volume-slider\"\n \
                \     }\n    ]\n  }\n}}, {% endfor %}"
        visibility:
          - condition: numeric_state
            entity: sensor.count_front_door_media_player
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 조명
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('entrance')\n  | select('match',\
                \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n  \
                \  'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('현관 ', '')\n  }\n}}, {% endfor %}        "
        visibility:
          - condition: numeric_state
            entity: sensor.count_front_door_light
            above: 0
      - type: grid
        cards:
          - type: heading
            heading: 환경
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('entrance')\n  | select('match',\
                \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
                \ state_attr(ENTITY,'friendly_name') | replace('현관 ', '')\n  }\n}},\
                \ {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_front_door_climate
            above: 0
      - type: grid
        cards:
          - type: heading
            heading_style: title
            heading: 스위치
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in area_entities('entrance')\n  | select('match',\
                \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n\
                \    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
                \ | replace('현관 ', '')\n  }\n}}, {% endfor %}  "
        visibility:
          - condition: numeric_state
            entity: sensor.count_front_door_switch
            above: 0
    badges:
      - type: custom:auto-entities
        card:
          type: custom:mushroom-chips-card
        card_param: chips
        sort:
          method: state
        filter:
          template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
            \ '(air_quality|sensor)\\..*(average_temperature|average_humidity|average_illuminance)')\n\
            \  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n\
            \    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('현관 ', '')\n  }\n}}, {% endfor %}        "
      - type: custom:auto-entities
        card:
          type: custom:mushroom-chips-card
          alignment: center
        filter:
          template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        card_param: chips
    cards: []
  - type: sections
    max_columns: 2
    icon: mdi:city-variant-outline
    path: neighborhood
    title: 주변
    sections:
      - type: grid
        cards:
          - type: heading
            heading: 기상 정보
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:simple-weather-card
            entity: weather.forecast_home
          - type: custom:auto-entities
            filter:
              include:
                - options: {}
                  domain: geo_location
                - options: {}
                  entity_id: zone.home
              exclude: []
            card:
              history_start: 24 hours ago
              type: custom:map-card
              x: 37.5490248
              y: 127.0705509
              zoom: 7
              tile_layer_url: '{{ states(''sensor.naver_map_url'') }}'
              tile_layer_attribution: naver.com
              plugins:
                - name: korea-radar
                  url: /hacsfiles/ha-map-card-korea-radar/ha-map-card-korea-radar.js
                  options:
                    delay: 1
                    range:
                      start:
                        entity: input_datetime.dashboard_select_datetime
                        attribute: state
                    opacity: 0.5
                    decorate: <div>{date}</div>
          - type: custom:auto-entities
            card:
              type: entities
              title: 서울
            card_param: entities
            sort:
              method: state
            filter:
              template: "{% for ENTITY in integration_entities('waqi')\n  | select('match',\
                \ '(sensor)\\..*')\n  | reject('is_hidden_entity') -%}\n  {\n    \"\
                entity\": \"{{ ENTITY }}\",\n    \"name\": \"{{ state_attr(ENTITY,\
                \ 'friendly_name') | replace('Seocho-gu, Seoul, South Korea (서초구 서울)',\
                \ '') }}\"\n  }, {% endfor %}"
      - type: grid
        cards:
          - type: heading
            heading: 교통 정보
            heading_style: title
            card_mod:
              style:
                .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
                  \ 24px;      \n  background-color: var(--primary-background-color)\
                  \ !important;\n  border-style: solid;\n}\n.title > p {\n  color:\
                  \ var(--primary-text-color); important;\n  font-size: 20px; !important;\n\
                  \  font-weight: bold;\n  padding-left: 12px;\n}\n"
          - type: custom:auto-entities
            card:
              type: grid
              columns: 2
              square: false
            filter:
              template: "{% for ENTITY in integration_entities('generic')\n  | select('match',\
                \ '(camera)\\..*')\n  | reject('is_hidden_entity') -%}\n  {\n    \"\
                type\": \"picture-entity\",\n    \"entity\": \"{{ ENTITY }}\",\n \
                \   \"aspect_ratio\": \"1.6\",\n    \"camera_view\": \"auto\"\n  },\
                \ {% endfor %}"
              exclude: []
            show_empty: true
            card_param: cards
          - type: heading
            icon: mdi:bus-stop
            heading_style: subtitle
            heading: 뱅뱅사거리.뱅뱅프라자 정류장
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: false
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'beoseu_docag_jeongbo_11230661002') | list %}\n[\n  {%\
                \ for entity in entities %}\n  {\n    \"type\": \"tile\",\n    \"\
                entity\": \"{{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('버스 도착 정보 (11230661002)', '') }}\",\n\
                \    \"icon\": 'mdi:bus'\n  }{% if not loop.last %},{% endif %}\n\
                \  {% endfor %}\n]"
          - type: heading
            icon: mdi:bus-stop
            heading_style: subtitle
            heading: 뱅뱅사거리정류장
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: false
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'beoseu_docag_jeongbo_11220521017') | list %}\n[\n  {%\
                \ for entity in entities\n    | sort(attribute='arrival_time') %}\n\
                \  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id\
                \ }}\",\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name')\
                \ | replace('버스 도착 정보 (11220521017)', '') }}\",\n    \"icon\": 'mdi:bus'\n\
                \  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
          - type: heading
            icon: mdi:subway-variant
            heading_style: subtitle
            heading: 강남역 2호선(상행)
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: true
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'subway_gangnam_line2_up') | list %}\n[\n  {% for entity\
                \ in entities %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"\
                {{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('지하철 강남역 2호선(상행) ', '') + ': ' }} {{\
                \ state_attr(entity.entity_id, 'headsign') + ' 방면' }}\",\n    \"color\"\
                : \"#00A84D\",\n    \"state_content\": [\n      \"state\"\n    ]\n\
                \  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
          - type: heading
            icon: mdi:subway-variant
            heading_style: subtitle
            heading: 강남역 2호선(하행)
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: true
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'subway_gangnam_line2_down') | list %}\n[\n  {% for entity\
                \ in entities %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"\
                {{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('지하철 강남역 2호선(하행)', '') + ': ' }} {{ state_attr(entity.entity_id,\
                \ 'headsign') + ' 방면' }}\",\n    \"color\": \"#00A84D\",\n    \"state_content\"\
                : [\n      \"state\"\n    ]\n  }{% if not loop.last %},{% endif %}\n\
                \  {% endfor %}\n]"
          - type: heading
            icon: mdi:subway-variant
            heading_style: subtitle
            heading: 강남역 신분당선(하행)
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: true
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'subway_gangnam_sinbundang') | list %}\n[\n  {% for entity\
                \ in entities %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"\
                {{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('지하철 강남역 신분당선(하행) ', '') + ': ' }} {{\
                \ state_attr(entity.entity_id, 'headsign') + ' 방면' }}\",\n    \"color\"\
                : \"#D31145\",\n    \"state_content\": [\n      \"state\"\n    ]\n\
                \  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
          - type: heading
            icon: mdi:subway-variant
            heading_style: subtitle
            heading: 양재역 3호선(상행)
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: true
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'subway_yangjae_line3_up') | list %}\n[\n  {% for entity\
                \ in entities %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"\
                {{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('지하철 양재역 3호선(상행) ', '') + ': ' }} {{\
                \ state_attr(entity.entity_id, 'headsign') + ' 방면' }}\",\n    \"color\"\
                : \"#EF7C1C\",\n    \"state_content\": [\n      \"state\"\n    ]\n\
                \  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
          - type: heading
            icon: mdi:subway-variant
            heading_style: subtitle
            heading: 양재역 3호선(하행)
          - type: custom:auto-entities
            card:
              type: grid
              square: false
              columns: 2
            card_param: cards
            sort:
              method: entity_id
              reverse: true
            filter:
              template: "{% set entities = states.sensor\n  | selectattr('entity_id',\
                \ 'search', 'subway_yangjae_line3_down') | list %}\n[\n  {% for entity\
                \ in entities %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"\
                {{ entity.entity_id }}\",\n    \"name\": \"{{ state_attr(entity.entity_id,\
                \ 'friendly_name') | replace('지하철 양재역 3호선(하행) ', '') + ': ' }} {{\
                \ state_attr(entity.entity_id, 'headsign') + ' 방면' }}\",\n    \"color\"\
                : \"#EF7C1C\",\n    \"state_content\": [\n      \"state\"\n    ]\n\
                \  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
    subview: true
    cards: []
    badges:
      - type: custom:auto-entities
        card:
          type: custom:mushroom-chips-card
          alignment: center
        filter:
          template: "{% for ENTITY in integration_entities('rest')\n  | select('match',\
            \ '(sensor)\\..*')\n  | reject('is_state', 'unavailable') \n  | reject('is_state',\
            \ 'unknown') \n  | reject('is_state', '없음') \n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'entity',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY, 'friendly_name') | replace('서울 기상특보 ', '') + ' '\
            \ + states(ENTITY),\n    'content_info': 'name'\n  }\n}}, {% endfor %}\
            \        \n"
        show_empty: true
        card_param: chips
    header:
      layout: center
      badges_position: top
  - type: sections
    max_columns: 2
    subview: true
    path: test
    title: test
    icon: mdi:flask
    sections:
      - type: grid
        cards:
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.count_media_player_playing
                above: 0
                below: 2
            card:
              type: custom:auto-entities
              show_empty: false
              card:
                type: vertical-stack
              card_param: cards
              sort:
                method: entity_id
              filter:
                template: "{% for ENTITY in expand('media_player.all_media_players')\n\
                  \  | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\"\
                  : \"conditional\",\n    \"conditions\": [\n      {\n        \"condition\"\
                  : \"state\",\n        \"entity\": \"{{ ENTITY.entity_id }}\",\n\
                  \        \"state\": \"playing\"\n      }\n    ],\n    \"card\":\
                  \ {\n      \"type\": \"custom:mediocre-media-player-card\",\n  \
                  \    \"entity_id\": \"{{ ENTITY.entity_id }}\",\n      \"use_art_colors\"\
                  : \"true\",\n      \"tap_opens_popup\": \"true\",\n      \"ma_entity_id\"\
                  : \"{{ ENTITY.entity_id }}\",\n      {% if ENTITY.entity_id in integration_entities('music_assistant')\
                  \ %}\n        \"speaker_group\": {\n          \"entity_id\": \"\
                  {{ ENTITY.entity_id }}\",\n          \"entities\": [\n         \
                  \   {% for mass_entity in integration_entities('music_assistant')\
                  \ %}\n                \"{{ mass_entity }}\"\n              {% if\
                  \ not loop.last %},{% endif %}\n            {% endfor %}\n     \
                  \     ]\n        },\n      {% endif %}\n      \"tap_action\": {\n\
                  \        \"action\": \"navigate\",\n        \"navigation_path\"\
                  : \"#media-player\"\n      }\n    }\n  },\n{% endfor %}   "
          - type: conditional
            conditions:
              - condition: numeric_state
                entity: sensor.count_media_player_playing
                above: 0
            card:
              type: custom:auto-entities
              show_empty: false
              card:
                type: vertical-stack
              card_param: cards
              sort:
                method: entity_id
              filter:
                template: "{% for ENTITY in expand('media_player.all_media_players')\n\
                  \  | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\"\
                  : \"conditional\",\n    \"conditions\": [\n      {\n        \"condition\"\
                  : \"state\",\n        \"entity\": \"{{ ENTITY.entity_id }}\",\n\
                  \        \"state\": \"playing\"\n      }\n    ],\n    \"card\":\
                  \ {\n      \"type\": \"vertical-stack\",\n      \"cards\": [\n \
                  \       {\n          \"type\": \"custom:bubble-card\",\n       \
                  \   \"card_type\": \"separator\",\n          \"name\": \"Now Playing\"\
                  ,\n          \"icon\": \"mdi:television-speaker\",\n          \"\
                  card_layout\": \"large\",\n          \"sub_button\": [\n       \
                  \     {\n              \"entity\": \"{{ ENTITY.entity_id | replace(\"\
                  media_player\", \"button\") + \"_favorite_current_song\" }}\",\n\
                  \              \"icon\": \"mdi:heart-plus\",\n              \"tap_action\"\
                  : {\n                \"action\": \"perform-action\",\n         \
                  \       \"perform_action\": \"button.press\",\n                \"\
                  target\": {\n                  \"entity_id\": \"entity\"\n     \
                  \           },\n                \"confirmation\": \"true\"\n   \
                  \           }\n            }\n          ]\n        },\n        {\n\
                  \          \"type\": \"media-control\",\n          \"entity\": \"\
                  {{ ENTITY.entity_id }}\"\n        },\n        {% if ENTITY.entity_id\
                  \ in integration_entities('music_assistant') %}\n          {\n \
                  \           \"type\": \"custom:yet-another-media-player\",\n   \
                  \         \"volume_mode\": \"slider\",\n            \"match_theme\"\
                  : \"true\",\n            \"collapse_on_idle\": \"false\",\n    \
                  \        \"always_collapsed\": \"true\",\n            \"alternate_progress_bar\"\
                  : \"false\",\n            \"hold_to_pin\": \"false\",\n        \
                  \    \"show_chip_row\": \"auto\",\n            \"entities\": [\n\
                  \              {% for mass_entity in integration_entities('music_assistant')\n\
                  \                | selectattr('entity_id', 'match', '^media_player\\\
                  ..*') %}\n                \"{{ mass_entity }}\"{% if not loop.last\
                  \ %},{% endif %}\n              {% endfor %}\n            ]\n  \
                  \        },\n        {% endif %}\n        {\n          \"type\"\
                  : \"custom:bubble-card\",\n          \"card_type\": \"separator\"\
                  ,\n          \"card_layout\": \"large\"\n        }             \
                  \     \n      ]\n    }\n  },\n{% endfor %}   "
          - type: tile
            entity: media_player.living_room
            features_position: bottom
            vertical: false
          - type: map
            entities:
              - entity: person.saya6k
            card_mod:
              style:
                ha-map $:
                  ha-entity-marker $: ".marker {\n  outline-style: solid;\n  outline-width:\
                    \ 1px;\n  outline-color: var(--accent-color);\n  animation: resizing_outline\
                    \ 1s linear infinite;\n} \n@keyframes resizing_outline {\n  0%\
                    \ {\n    outline-offset: 0;\n  }\n  25% {\n    outline-offset:\
                    \ 5px;\n  }\n  50% {\n    outline-offset: 10px;\n  }\n  75% {\n\
                    \    outline-offset: 15px;\n  }\n  100% {\n    outline-offset:\
                    \ 20px;\n  }\n}\n"
          - type: custom:map-card
            history_start: 24 hours ago
            tile_layer_url: '{{ states(''sensor.naver_map_url'') }}'
            tile_layer_attribution: naver.com
            entities:
              - entity: person.saya6k
                gradual_opacity': '0.6'
                tap_action:
                  action: navigate
                  navigation_path: saya6k
              - entity: person.abba
                gradual_opacity': '0.6'
                tap_action:
                  action: navigate
                  navigation_path: abba
              - entity: person.eomma
                gradual_opacity': '0.6'
                tap_action:
                  action: navigate
                  navigation_path: eomma
              - zone.academy
              - zone.bonga
              - zone.home
            card_mod:
              style:
                map-card-entity-marker $: ".marker {\n  outline-style: solid;\n  outline-width:\
                  \ 1px;\n  outline-color: var(--accent-color);\n  animation: resizing_outline\
                  \ 1s linear infinite;\n} \n@keyframes resizing_outline {\n  0% {\n\
                  \    outline-offset: 0;\n  }\n  25% {\n    outline-offset: 5px;\n\
                  \  }\n  50% {\n    outline-offset: 10px;\n  }\n  75% {\n    outline-offset:\
                  \ 15px;\n  }\n  100% {\n    outline-offset: 20px;\n  }\n}\n"
          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:auto-entities
                    show_empty: false
                    card:
                      type: vertical-stack
                    card_param: cards
                    sort:
                      method: entity_id
                    filter:
                      template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                        \  | select('in', expand('media_player.all_media_players')\
                        \ | map(attribute='entity_id') | list)\n  | select('in', integration_entities('music_assistant'))\n\
                        \  | reject('is_hidden_entity') -%}\n{{\n  {\n    \"type\"\
                        : \"custom:mediocre-media-player-card\",\n    \"entity_id\"\
                        : ENTITY,\n    \"tap_opens_popup\": \"true\",\n    \"speaker_group\"\
                        : {\n      \"entity_id\": ENTITY,\n      \"entities\": [\n\
                        \      ]\n    },\n    \"ma_entity_id\": ENTITY,\n    \"custom_buttons\"\
                        : [],\n    \"action\": {}\n  }\n}}, {% endfor %} "
              - type: vertical-stack
                cards:
                  - type: custom:auto-entities
                    show_empty: false
                    card:
                      type: vertical-stack
                    card_param: cards
                    sort:
                      method: entity_id
                    filter:
                      template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                        \  | select('in', expand('media_player.all_media_players')\
                        \ | map(attribute='entity_id') | list)\n  | reject('in', integration_entities('music_assistant'))\n\
                        \  | reject('is_hidden_entity') -%}\n{{\n  {\n    \"type\"\
                        : \"custom:mediocre-media-player-card\",\n    \"entity_id\"\
                        : ENTITY,\n    \"tap_opens_popup\": \"false\",\n    \"always_show_power_button\"\
                        : \"true\",\n    \"always_show_custom_buttons\": \"true\"\
                        ,                          \n    \"custom_buttons\": [\n \
                        \     {\n        \"icon\": \"mdi:netflix\",\n        \"name\"\
                        : \"Netflix\",\n        \"tap_action\": {\n          \"action\"\
                        : \"perform-action\",\n          \"perform_action\": \"media_player.play_media\"\
                        ,\n          \"target\": {\n            \"entity_id\": \"\
                        {{ ENTITY.entity_id }}\"\n          },\n          \"data\"\
                        : {\n            \"media_content_type\": \"url\",\n      \
                        \      \"media_content_id\": \"https://www.netflix.com\"\n\
                        \          }\n        }\n      },\n      {\n        \"icon\"\
                        : \"mdi:youtube\",\n        \"name\": \"YouTube\",\n     \
                        \   \"tap_action\": {\n          \"action\": \"perform-action\"\
                        ,\n          \"perform_action\": \"media_player.play_media\"\
                        ,\n          \"target\": {\n            \"entity_id\": \"\
                        {{ ENTITY.entity_id }}\"\n          },\n          \"data\"\
                        : {\n            \"media_content_type\": \"url\",\n      \
                        \      \"media_content_id\": \"youtube://www.youtube.com\"\
                        \n          }\n        }\n      },\n      {\n        \"icon\"\
                        : \"mdi:plex\",\n        \"name\": \"Plex\",\n        \"tap_action\"\
                        : {\n          \"action\": \"perform-action\",\n         \
                        \ \"perform_action\": \"media_player.play_media\",\n     \
                        \     \"target\": {\n            \"entity_id\": \"{{ ENTITY.entity_id\
                        \ }}\"\n          },\n          \"data\": {\n            \"\
                        media_content_type\": \"url\",\n            \"media_content_id\"\
                        : \"plex://server/44d3daca51c0f7bb8db91b24243fdf1bf70fd189/\"\
                        \n          }\n        }\n      },\n      {\n        \"icon\"\
                        : \"mdi:television\",\n        \"name\": \"TV\",\n       \
                        \ \"tap_action\": {\n          \"action\": \"perform-action\"\
                        ,\n          \"perform_action\": \"media_player.play_media\"\
                        ,\n          \"target\": {\n            \"entity_id\": \"\
                        {{ ENTITY.entity_id }}\"\n          },\n          \"data\"\
                        : {\n            \"media_type\": \"url\",\n            \"\
                        media_id\": \"music://playlist/1\"\n          }\n        }\n\
                        \      },\n      {\n        \"icon\": \"mdi:music\",\n   \
                        \     \"name\": \"Music\",\n        \"tap_action\": {\n  \
                        \        \"action\": \"perform-action\",\n          \"perform_action\"\
                        : \"media_player.play_media\",\n          \"target\": {\n\
                        \            \"entity_id\": \"{{ ENTITY.entity_id }}\"\n \
                        \         },\n          \"data\": {\n            \"media_type\"\
                        : \"url\",\n            \"media_id\": \"music://playlist/1\"\
                        \n          }\n        }\n      }\n    ],\n    \"action\"\
                        : {}\n  }\n}}, {% endfor %}    "
          - type: custom:yet-another-media-player
            entities:
              - media_player.living_room
              - media_player.bathroom
            volume_mode: slider
            match_theme: true
            collapse_on_idle: false
            always_collapsed: true
            alternate_progress_bar: false
            actions:
              - icon: mdi:magnify
                menu_item: search
          - type: custom:auto-entities
            card:
              type: custom:bubble-card
              card_type: separator
              name: Now Playing
              icon: mdi:television-speaker
              card_layout: large
            card_param: sub_button
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\
                \      \n  | list\n  | select('in', integration_entities('music_assistant'))\n\
                \  | select('is_state', 'playing')\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  ENTITY\n}}, {% endfor %}        \n"
              exclude: []
          - type: custom:mod-card
            card:
              type: iframe
              url: https://embed.windy.com/embed2.html?lat=37.48&lon=127.03&&detailLat=37.497&detailLon=127.054&zoom=7&overlay=radar&product=radar&message=false&width=800&height=600&&play=true
            style: "ha-card {\n  height: 100% !important;\n  width: 100% !important;\n\
              \  min-height: 600px;\n}\n"
          - type: custom:mushroom-chips-card
            chips:
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.home_alarm
                    state: triggered
                chip:
                  type: template
                  entity: alarm_control_panel.home_alarm
                  content: Triggered
                  tap_action:
                    action: navigate
                    navigation_path: '#alarm'
                  icon: mdi:bell-ring
                  icon_color: '#d14f3a'
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.home_alarm
                    state: armed_away
                chip:
                  type: template
                  entity: alarm_control_panel.home_alarm
                  content: Armed away
                  tap_action:
                    action: navigate
                    navigation_path: '#alarm'
                  icon: mdi:shield-lock
                  icon_color: '#69ac5a'
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.home_alarm
                    state: arming
                chip:
                  type: template
                  entity: alarm_control_panel.home_alarm
                  content: Arming
                  tap_action:
                    action: navigate
                    navigation_path: '#alarm'
                  icon: mdi:shield
                  icon_color: '#efa340'
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.home_alarm
                    state: pending
                chip:
                  type: template
                  entity: alarm_control_panel.home_alarm
                  content: Pending
                  tap_action:
                    action: navigate
                    navigation_path: '#alarm'
                  icon: mdi:shield-outline
                  icon_color: '#efa340'
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.home_alarm
                    state: disarmed
                chip:
                  type: template
                  entity: alarm_control_panel.home_alarm
                  tap_action:
                    action: navigate
                    navigation_path: '#alarm'
                  icon: mdi:shield-off
                  icon_color: '#disarmed'
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.seoul_teukbo_heat_alert
                    state_not: unknown
                chip:
                  type: template
                  entity: sensor.seoul_teukbo_heat_alert
                  tap_action:
                    action: navigate
                    navigation_path: '#weather-warning'
                  icon: mdi:alert
                  icon_color: orange
            alignment: end
          - type: custom:auto-entities
            card:
              type: custom:bubble-card
              card_type: separator
              name: ''
              icon: ''
              card_layout: large
            card_param: sub_button
            sort:
              method: entity_id
            filter:
              template: "{%- for AREA in areas() -%} {{\n  {\n    'show_name': 'true',\n\
                \    'show_background': 'true',\n    'name': area_name(AREA),\n  \
                \  'tap_action': {\n      'action': 'navigate',\n      'navigation_path':\
                \ '/lovelace/' ~ AREA\n    }\n  }\n}},{% endfor %}\n"
              exclude: []
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                icon: mdi:bell
                card_mod:
                  style: "ha-card {\n  position: relative;\n}\n\n{% set notifications\
                    \ = states('sensor.count_alerts_true') | int %}\n{% if notifications\
                    \ > 0 %}\n  ha-card:after {\n    content: \"{{ notifications }}\"\
                    ;\n    position: absolute;\n    top: -3px;\n    right: -3px;\n\
                    \    background-color: accent;\n    color: accent;\n    border-radius:\
                    \ 50%;\n    width: 16px;\n    height: 16px;\n    font-size: 10px;\n\
                    \    line-height: 16px;\n    text-align: center;\n    display:\
                    \ inline-block;\n    font-weight: bold;\n  } {% endif %}\n"
            allignment: end
          - type: custom:mushroom-chips-card
            chips:
              - type: template
                card_mod:
                  style: "ha-card {\n \n  box-shadow: none;\n  ha-card-border-width:\
                    \ 0px;\n}\nha-card:after {\n  content: \"{{ expand(states.light.lights_off)\
                    \ | selectattr( 'state', 'eq', 'on') | list | count }}\";\n  position:\
                    \ absolute;\n  top: -10%;\n  right: 60%;\n  display: flex;\n \
                    \ justify-content: center;\n  align-items: center;\n  width: 14px;\n\
                    \  height: 14px;\n  font-size: 9px;\n  font-weight: 700;\n  border-radius:\
                    \ 50%;\n  background: rgb(var(--rgb-orange));\n  color: var(--card-background-color);\n\
                    }\n"
                entity: light.all_lights
                content: Lights on
                icon: mdi:lightbulb
                icon_color: amber
          - type: custom:mushroom-template-card
            layout: vertical
            entity: sensor.oven_job_state
            icon: mdi:toaster-oven
            icon_color: red
            primary: Toaster
            secondary: '{{ states(''sensor.oven_completion_time'') | round(1) }} W'
            tap_action:
              action: toggle
            double_action:
              action: none
            hold_action:
              action: more-info
            vertical: true
            card_mod:
              style: "ha-card {\n  border: none !important;\n}\nha-state-icon:before\
                \ {\n  content: \"\";\n  position: absolute;\n  width: 25%;\n  height:\
                \ 30%;\n  margin: 12%;\n  animation: cook 1s linear infinite;\n}\n\
                @keyframes cook { \n  0%, 100% { background: linear-gradient(0deg,\
                \ orange 0%, transparent 50%, transparent 100%); }\n  33% { background:\
                \ linear-gradient(0deg, transparent 0%, orange 50%, transparent 100%);\
                \ }\n  66% { background: linear-gradient(0deg, transparent 0%, transparent\
                \ 50%, orange 100%); }\n}\n:host {\n  --icon-size: 80px !important;\n\
                \  perspective: 900px;\n}\nha-card:active {\n  transform: rotateX(25deg);\n\
                \  transform-origin: center bottom;\n  transition: 0s;\n}\n"
          - type: custom:mushroom-template-card
            primary: Hello, {{user}}
            secondary: How are you?
            icon: mdi:toaster-oven
            layout: vertical
            card_mod:
              style: "ha-card {\n  border: none !important;\n}\nha-state-icon:before\
                \ {\n  content: \"\";\n  position: absolute;\n  width: 37%;\n  height:\
                \ 30%;\n  left: 22px;\n  top: 30px;\n  animation: cook 1.5s linear\
                \ infinite;\n}\n@keyframes cook { \n  0%, 100% { background: linear-gradient(0deg,\
                \ orange 0%, transparent 50%, transparent 100%); }\n  33% { background:\
                \ linear-gradient(0deg, transparent 0%, orange 50%, transparent 100%);\
                \ }\n  66% { background: linear-gradient(0deg, transparent 0%, transparent\
                \ 50%, orange 100%); }\n}\n:host {\n  --icon-size: 80px !important;\n\
                \  perspective: 900px;\n}\nha-card:active {\n  transform: rotateX(25deg);\n\
                \  transform-origin: center bottom;\n  transition: 0s;\n}\n"
      - type: grid
        cards:
          - type: heading
            heading: 새 섹션
          - type: custom:auto-entities
            show_empty: false
            card:
              type: vertical-stack
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: ''
              include:
                - options:
                    type: tile
                    features:
                      - type: cover-position
                    features_position: inline
                  domain: cover
              exclude:
                - options: {}
                  hidden_by: '*'
                - options: {}
                  entity_id: cover.all_covers
          - type: custom:auto-entities
            show_empty: false
            card:
              type: grid
              columns: 2
              square: false
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: "{% for ENTITY in states.light\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('light.all_lights') | map(attribute='entity_id')\
                \ | list)\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    \"type\"\
                : \"tile\",\n    \"entity\": ENTITY,\n    \"name\": state_attr(ENTITY,\
                \ 'friendly_name')\n  }\n}}, {% endfor %}"
          - type: custom:auto-entities
            show_empty: false
            card:
              type: vertical-stack
            card_param: cards
            sort:
              method: entity_id
            filter:
              template: ''
              include:
                - options:
                    type: tile
                    features:
                      - type: light-brightness
                    features_position: inline
                  domain: light
              exclude:
                - options: {}
                  hidden_by: '*'
                - options: {}
                  entity_id: light.all_lights
          - features:
              - type: area-controls
            alert_classes:
              - motion
              - moisture
              - connectivity
              - occupancy
            sensor_classes:
              - temperature
              - humidity
              - sound_pressure
            features_position: bottom
            display_type: icon
            type: area
            area: living_room
            color: ''
            navigation_path: /lovelace/living-room
          - features:
              - type: area-controls
            alert_classes:
              - motion
              - moisture
              - occupancy
            sensor_classes:
              - temperature
              - humidity
            features_position: bottom
            display_type: picture
            type: area
            area: bedroom
            color: ''
            navigation_path: /lovelace/bedroom
          - type: custom:addon-iframe-card
            url: a0d7b954_grocy
            aspect_ratio: '1'
          - entities:
              - entity: todo.home
                display_order: none
                show_title: true
                title: Home 🏡
              - entity: todo.home_assistant
                display_order: none
                show_title: true
                title: Home Assistant
              - entity: todo.shopping_list
                display_order: none
                show_title: true
                title: Shopping List 🛒
              - entity: todo.wish_list
                display_order: none
                show_title: true
                title: Wish List 🔮
            card_spacing: 15
            show_pagination: true
            show_icons: true
            show_create: true
            show_addbutton: true
            show_completed: false
            show_completed_menu: false
            delete_confirmation: false
            enable_search: true
            type: custom:todo-swipe-card
          - type: custom:upcoming-media-card
            entity: sensor.steam_wishlist_76561198124495822
          - type: custom:html-template-card
            ignore_line_breaks: true
            content: "\n<style>\n  .marquee-container {\n      width: 100%;\n    \
              \  height: 75px;\n      border-radius: 6px;\n      overflow: hidden;\n\
              \      overflow-x: scroll;\n      padding-bottom: 8px;\n      white-space:\
              \ nowrap;\n      box-sizing: border-box;\n  }\n .marquee {\n     display:\
              \ inline-flex;\n     animation: marquee 270s linear infinite;\n }\n\
              \  .marquee a {\n       display: flex;\n       align-items: center;\n\
              \       margin-right: 32px;\n       text-decoration: none;\n       color:\
              \ #ddd !important;\n       padding-right: 24px;\n       border-right:\
              \ 1px solid #333;\n   }\n   \n   a img {\n       max-height: 75px;\n\
              \       margin-right: 10px;\n       border-radius: 6px;\n   }\n   \n\
              \   a div {\n       display: flex;\n       flex-direction: column;\n\
              \       max-height: 70px;\n       height: 100%;\n   }\n   a div span:nth-child(1)\
              \ {\n     font-weight: 700;\n     width: 270px;\n     white-space: initial;\n\
              \     line-height: 1.2rem;\n     transform: translateY(-4px);\n   }\n\
              \   a div span:nth-child(2) {\n     color: #777;\n     line-height:\
              \ 0.88rem;\n     font-size: 0.7rem;\n     white-space: initial;\n  \
              \   display: -webkit-box;\n    -webkit-box-orient: vertical; \n    -webkit-line-clamp:\
              \ 3; \n    text-overflow: ellipsis;\n }\n\n @keyframes marquee {\n \
              \    0% { transform: translateX(0); }\n     13% { transform: translateX(0);\
              \ }\n     100% { transform: translateX(-100%); }\n }\n </style>\n <div\
              \ class=\"marquee-container\">\n   <div class=\"marquee\">\n   {% for\
              \ entry in state_attr('sensor.grocy_shopping_list', 'products') %}\n\
              \         <a href=\"{{ entry.link }}\">\n            <div style=\"background:\
              \ none;\">\n              <span>{{ entry.product.name }}</span>\n  \
              \            <span>{{ entry.product.available_amount }}</span>\n   \
              \         </div>\n         </a>\n   {% endfor %}\n   </div>\n </div>\n"
            card_mod:
              style: 'ha-card { background: none; border: none; padding-left: 0 !important;
                padding-right: 0 !important;}

                '
    badges: []
    header:
      card:
        type: custom:paper-buttons-row
        styles:
          justify-content: flex-start
          flex-wrap: wrap
          font-size: 1em
          line-height: 1.2em
          margin: 6px 0 12px 0
          width: 100%
        buttons:
          - layout: name
            name: 지금은
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
          - layout: name|state|icon
            entity: weather.wn_seoul
            name: '{{ state_attr(config.entity, ''temperature'') }}°,'
            state_text:
              cloudy: 흐림
              rainy: 비
            icon: wi:{{ states(config.entity) }}
            styles:
              icon:
                color: black
              name:
                color: var(--primary-text-color)
              state:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: 이고
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
          - layout: name
            entity: weather.wn_seoul
            name: '{{ states(''sensor.wn_seoul_temp_diff_comment'') }}.'
            styles:
              name:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
            tap_action:
              action: more-info
          - layout: name
            name: 최고기온은
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
          - layout: name
            entity: weather.wn_seoul
            name: '{{ state_attr(''sensor.wn_seoul_temperature'', ''tmax'') }} °🔺'
            styles:
              name:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: 에 최저
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
          - layout: name
            entity: weather.wn_seoul
            name: '{{ state_attr(''sensor.wn_seoul_temperature'', ''tmin'') }}°🔻'
            styles:
              name:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
          - layout: name
            name: 입니다.
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
          - layout: state|name
            entity: sensor.wn_seoul_precip_hour_today
            name: 시 에서
            state:
              attribute: hour
            state_text: null
            styles:
              state:
                color: var(--primary-text-color)
              name:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
            tap_action:
              action: more-info
          - layout: state|name
            entity: sensor.wn_seoul_precip_hour_today
            name: 시까지
            state:
              attribute: end_hour
            styles:
              name:
                color: var(--primary-text-color)
              state:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
            tap_action:
              action: more-info
          - layout: name
            entity: sensor.wn_seoul_precip_hour_today
            name: '{{ state_attr(''sensor.wn_seoul_precip_hour_today'', ''snowrain'')
              }}, {{ state_attr(''sensor.wn_seoul_precip_hour_today'', ''end_sum_prec'')
              }}mm'
            styles:
              name:
                color: var(--primary-text-color)
              button:
                padding: 2px 8px
                background-color: var(--card-background-color)
                border-radius: 24px
                flex-basis: 1
                flex-shrink: 0
                display: flex
            tap_action:
              action: more-info
          - layout: name
            name: 가 예상됩니다.
            styles:
              button:
                flex-basis: 1
                flex-shrink: 0
              name:
                color: var(--primary-text-color)
            tap_action:
              action: none
            hold_action:
              action: none
            double_tap_action:
              action: none
